Terminals unused in grammar

    '%'


Grammar

    0 $accept: program $end

    1 program: ext_def_list

    2 ext_def_list: ext_def_list ext_def
    3             | ε

    4 ext_def: type_specifier pointers ID ';'
    5        | type_specifier pointers ID '[' INTEGER_CONST ']' ';'
    6        | struct_specifier ';'
    7        | func_decl compound_stmt

    8 type_specifier: TYPE
    9               | struct_specifier

   10 $@1: ε

   11 struct_specifier: STRUCT ID '{' $@1 def_list '}'
   12                 | STRUCT ID

   13 func_decl: type_specifier pointers ID '(' ')'
   14          | type_specifier pointers ID '(' param_list ')'

   15 pointers: '*'
   16         | ε

   17 param_list: param_decl
   18           | param_list ',' param_decl

   19 param_decl: type_specifier pointers ID
   20           | type_specifier pointers ID '[' INTEGER_CONST ']'

   21 def_list: def_list def
   22         | ε

   23 def: type_specifier pointers ID ';'
   24    | type_specifier pointers ID '[' INTEGER_CONST ']' ';'

   25 $@2: ε

   26 compound_stmt: '{' $@2 def_list stmt_list '}'

   27 stmt_list: stmt_list stmt
   28          | ε

   29 stmt: expr ';'
   30     | RETURN expr ';'
   31     | BREAK ';'
   32     | CONTINUE ';'
   33     | ';'
   34     | compound_stmt
   35     | IF '(' expr ')' stmt
   36     | IF '(' expr ')' stmt ELSE stmt
   37     | WHILE '(' expr ')' stmt
   38     | FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt

   39 expr_e: expr
   40       | ε

   41 expr: unary '=' expr
   42     | binary

   43 binary: binary RELOP binary
   44       | binary EQUOP binary
   45       | binary '+' binary
   46       | binary '-' binary
   47       | binary '*' binary
   48       | binary '/' binary
   49       | unary
   50       | binary LOGICAL_AND binary
   51       | binary LOGICAL_OR binary

   52 unary: '(' expr ')'
   53      | '(' unary ')'
   54      | INTEGER_CONST
   55      | CHAR_CONST
   56      | STRING
   57      | ID
   58      | '-' unary
   59      | '!' unary
   60      | unary INCOP
   61      | unary DECOP
   62      | INCOP unary
   63      | DECOP unary
   64      | '&' unary
   65      | '*' unary
   66      | unary '[' expr ']'
   67      | unary '.' ID
   68      | unary STRUCTOP ID
   69      | unary '(' args ')'
   70      | unary '(' ')'
   71      | SYM_NULL

   72 args: expr
   73     | args ',' expr


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 59
    '%' (37)
    '&' (38) 64
    '(' (40) 13 14 35 36 37 38 52 53 69 70
    ')' (41) 13 14 35 36 37 38 52 53 69 70
    '*' (42) 15 47 65
    '+' (43) 45
    ',' (44) 18 73
    '-' (45) 46 58
    '.' (46) 67
    '/' (47) 48
    ';' (59) 4 5 6 23 24 29 30 31 32 33 38
    '=' (61) 41
    '[' (91) 5 20 24 66
    ']' (93) 5 20 24 66
    '{' (123) 11 26
    '}' (125) 11 26
    error (256)
    LOGICAL_OR (258) 51
    LOGICAL_AND (259) 50
    EQUOP (260) 44
    RELOP (261) 43
    INCOP (262) 60 62
    DECOP (263) 61 63
    STRUCTOP (264) 68
    IF (265) 35 36
    ELSE (266) 36
    STRUCT (267) 11 12
    RETURN (268) 30
    WHILE (269) 37
    FOR (270) 38
    BREAK (271) 31
    CONTINUE (272) 32
    SYM_NULL (273) 71
    TYPE <stringVal> (274) 8
    CHAR_CONST (275) 55
    STRING (276) 56
    INTEGER_CONST <intVal> (277) 5 20 24 54
    ID <stringVal> (278) 4 5 11 12 13 14 19 20 23 24 57 67 68


Nonterminals, with rules where they appear

    $accept (41)
        on left: 0
    program (42)
        on left: 1
        on right: 0
    ext_def_list (43)
        on left: 2 3
        on right: 1 2
    ext_def (44)
        on left: 4 5 6 7
        on right: 2
    type_specifier <typeInfo> (45)
        on left: 8 9
        on right: 4 5 13 14 19 20 23 24
    struct_specifier <typeInfo> (46)
        on left: 11 12
        on right: 6 9
    $@1 (47)
        on left: 10
        on right: 11
    func_decl <typeInfo> (48)
        on left: 13 14
        on right: 7
    pointers (49)
        on left: 15 16
        on right: 4 5 13 14 19 20 23 24
    param_list <paramList> (50)
        on left: 17 18
        on right: 14 18
    param_decl <paramList> (51)
        on left: 19 20
        on right: 17 18
    def_list (52)
        on left: 21 22
        on right: 11 21 26
    def (53)
        on left: 23 24
        on right: 21
    compound_stmt (54)
        on left: 26
        on right: 7 34
    $@2 (55)
        on left: 25
        on right: 26
    stmt_list (56)
        on left: 27 28
        on right: 26 27
    stmt (57)
        on left: 29 30 31 32 33 34 35 36 37 38
        on right: 27 35 36 37 38
    expr_e <typeInfo> (58)
        on left: 39 40
        on right: 38
    expr <typeInfo> (59)
        on left: 41 42
        on right: 29 30 35 36 37 39 41 52 66 72 73
    binary <typeInfo> (60)
        on left: 43 44 45 46 47 48 49 50 51
        on right: 42 43 44 45 46 47 48 50 51
    unary <typeInfo> (61)
        on left: 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71
        on right: 41 49 53 58 59 60 61 62 63 64 65 66 67 68 69 70
    args (62)
        on left: 72 73
        on right: 69 73


State 0

    0 $accept: • program $end

    $default  reduce using rule 3 (ext_def_list)

    program       go to state 1
    ext_def_list  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: ext_def_list •
    2 ext_def_list: ext_def_list • ext_def

    STRUCT  shift, and go to state 4
    TYPE    shift, and go to state 5

    $default  reduce using rule 1 (program)

    ext_def           go to state 6
    type_specifier    go to state 7
    struct_specifier  go to state 8
    func_decl         go to state 9


State 3

    0 $accept: program $end •

    $default  accept


State 4

   11 struct_specifier: STRUCT • ID '{' $@1 def_list '}'
   12                 | STRUCT • ID

    ID  shift, and go to state 10


State 5

    8 type_specifier: TYPE •

    $default  reduce using rule 8 (type_specifier)


State 6

    2 ext_def_list: ext_def_list ext_def •

    $default  reduce using rule 2 (ext_def_list)


State 7

    4 ext_def: type_specifier • pointers ID ';'
    5        | type_specifier • pointers ID '[' INTEGER_CONST ']' ';'
   13 func_decl: type_specifier • pointers ID '(' ')'
   14          | type_specifier • pointers ID '(' param_list ')'

    '*'  shift, and go to state 11

    $default  reduce using rule 16 (pointers)

    pointers  go to state 12


State 8

    6 ext_def: struct_specifier • ';'
    9 type_specifier: struct_specifier •

    ';'  shift, and go to state 13

    $default  reduce using rule 9 (type_specifier)


State 9

    7 ext_def: func_decl • compound_stmt

    '{'  shift, and go to state 14

    compound_stmt  go to state 15


State 10

   11 struct_specifier: STRUCT ID • '{' $@1 def_list '}'
   12                 | STRUCT ID •

    '{'  shift, and go to state 16

    $default  reduce using rule 12 (struct_specifier)


State 11

   15 pointers: '*' •

    $default  reduce using rule 15 (pointers)


State 12

    4 ext_def: type_specifier pointers • ID ';'
    5        | type_specifier pointers • ID '[' INTEGER_CONST ']' ';'
   13 func_decl: type_specifier pointers • ID '(' ')'
   14          | type_specifier pointers • ID '(' param_list ')'

    ID  shift, and go to state 17


State 13

    6 ext_def: struct_specifier ';' •

    $default  reduce using rule 6 (ext_def)


State 14

   26 compound_stmt: '{' • $@2 def_list stmt_list '}'

    $default  reduce using rule 25 ($@2)

    $@2  go to state 18


State 15

    7 ext_def: func_decl compound_stmt •

    $default  reduce using rule 7 (ext_def)


State 16

   11 struct_specifier: STRUCT ID '{' • $@1 def_list '}'

    $default  reduce using rule 10 ($@1)

    $@1  go to state 19


State 17

    4 ext_def: type_specifier pointers ID • ';'
    5        | type_specifier pointers ID • '[' INTEGER_CONST ']' ';'
   13 func_decl: type_specifier pointers ID • '(' ')'
   14          | type_specifier pointers ID • '(' param_list ')'

    '['  shift, and go to state 20
    '('  shift, and go to state 21
    ';'  shift, and go to state 22


State 18

   26 compound_stmt: '{' $@2 • def_list stmt_list '}'

    $default  reduce using rule 22 (def_list)

    def_list  go to state 23


State 19

   11 struct_specifier: STRUCT ID '{' $@1 • def_list '}'

    $default  reduce using rule 22 (def_list)

    def_list  go to state 24


State 20

    5 ext_def: type_specifier pointers ID '[' • INTEGER_CONST ']' ';'

    INTEGER_CONST  shift, and go to state 25


State 21

   13 func_decl: type_specifier pointers ID '(' • ')'
   14          | type_specifier pointers ID '(' • param_list ')'

    ')'     shift, and go to state 26
    STRUCT  shift, and go to state 4
    TYPE    shift, and go to state 5

    type_specifier    go to state 27
    struct_specifier  go to state 28
    param_list        go to state 29
    param_decl        go to state 30


State 22

    4 ext_def: type_specifier pointers ID ';' •

    $default  reduce using rule 4 (ext_def)


State 23

   21 def_list: def_list • def
   26 compound_stmt: '{' $@2 def_list • stmt_list '}'

    STRUCT  shift, and go to state 4
    TYPE    shift, and go to state 5

    $default  reduce using rule 28 (stmt_list)

    type_specifier    go to state 31
    struct_specifier  go to state 28
    def               go to state 32
    stmt_list         go to state 33


State 24

   11 struct_specifier: STRUCT ID '{' $@1 def_list • '}'
   21 def_list: def_list • def

    STRUCT  shift, and go to state 4
    TYPE    shift, and go to state 5
    '}'     shift, and go to state 34

    type_specifier    go to state 31
    struct_specifier  go to state 28
    def               go to state 32


State 25

    5 ext_def: type_specifier pointers ID '[' INTEGER_CONST • ']' ';'

    ']'  shift, and go to state 35


State 26

   13 func_decl: type_specifier pointers ID '(' ')' •

    $default  reduce using rule 13 (func_decl)


State 27

   19 param_decl: type_specifier • pointers ID
   20           | type_specifier • pointers ID '[' INTEGER_CONST ']'

    '*'  shift, and go to state 11

    $default  reduce using rule 16 (pointers)

    pointers  go to state 36


State 28

    9 type_specifier: struct_specifier •

    $default  reduce using rule 9 (type_specifier)


State 29

   14 func_decl: type_specifier pointers ID '(' param_list • ')'
   18 param_list: param_list • ',' param_decl

    ','  shift, and go to state 37
    ')'  shift, and go to state 38


State 30

   17 param_list: param_decl •

    $default  reduce using rule 17 (param_list)


State 31

   23 def: type_specifier • pointers ID ';'
   24    | type_specifier • pointers ID '[' INTEGER_CONST ']' ';'

    '*'  shift, and go to state 11

    $default  reduce using rule 16 (pointers)

    pointers  go to state 39


State 32

   21 def_list: def_list def •

    $default  reduce using rule 21 (def_list)


State 33

   26 compound_stmt: '{' $@2 def_list stmt_list • '}'
   27 stmt_list: stmt_list • stmt

    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    '&'            shift, and go to state 43
    INCOP          shift, and go to state 44
    DECOP          shift, and go to state 45
    '('            shift, and go to state 46
    IF             shift, and go to state 47
    RETURN         shift, and go to state 48
    WHILE          shift, and go to state 49
    FOR            shift, and go to state 50
    BREAK          shift, and go to state 51
    CONTINUE       shift, and go to state 52
    SYM_NULL       shift, and go to state 53
    CHAR_CONST     shift, and go to state 54
    STRING         shift, and go to state 55
    INTEGER_CONST  shift, and go to state 56
    ID             shift, and go to state 57
    ';'            shift, and go to state 58
    '{'            shift, and go to state 14
    '}'            shift, and go to state 59

    compound_stmt  go to state 60
    stmt           go to state 61
    expr           go to state 62
    binary         go to state 63
    unary          go to state 64


State 34

   11 struct_specifier: STRUCT ID '{' $@1 def_list '}' •

    $default  reduce using rule 11 (struct_specifier)


State 35

    5 ext_def: type_specifier pointers ID '[' INTEGER_CONST ']' • ';'

    ';'  shift, and go to state 65


State 36

   19 param_decl: type_specifier pointers • ID
   20           | type_specifier pointers • ID '[' INTEGER_CONST ']'

    ID  shift, and go to state 66


State 37

   18 param_list: param_list ',' • param_decl

    STRUCT  shift, and go to state 4
    TYPE    shift, and go to state 5

    type_specifier    go to state 27
    struct_specifier  go to state 28
    param_decl        go to state 67


State 38

   14 func_decl: type_specifier pointers ID '(' param_list ')' •

    $default  reduce using rule 14 (func_decl)


State 39

   23 def: type_specifier pointers • ID ';'
   24    | type_specifier pointers • ID '[' INTEGER_CONST ']' ';'

    ID  shift, and go to state 68


State 40

   58 unary: '-' • unary

    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    '&'            shift, and go to state 43
    INCOP          shift, and go to state 44
    DECOP          shift, and go to state 45
    '('            shift, and go to state 46
    SYM_NULL       shift, and go to state 53
    CHAR_CONST     shift, and go to state 54
    STRING         shift, and go to state 55
    INTEGER_CONST  shift, and go to state 56
    ID             shift, and go to state 57

    unary  go to state 69


State 41

   65 unary: '*' • unary

    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    '&'            shift, and go to state 43
    INCOP          shift, and go to state 44
    DECOP          shift, and go to state 45
    '('            shift, and go to state 46
    SYM_NULL       shift, and go to state 53
    CHAR_CONST     shift, and go to state 54
    STRING         shift, and go to state 55
    INTEGER_CONST  shift, and go to state 56
    ID             shift, and go to state 57

    unary  go to state 70


State 42

   59 unary: '!' • unary

    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    '&'            shift, and go to state 43
    INCOP          shift, and go to state 44
    DECOP          shift, and go to state 45
    '('            shift, and go to state 46
    SYM_NULL       shift, and go to state 53
    CHAR_CONST     shift, and go to state 54
    STRING         shift, and go to state 55
    INTEGER_CONST  shift, and go to state 56
    ID             shift, and go to state 57

    unary  go to state 71


State 43

   64 unary: '&' • unary

    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    '&'            shift, and go to state 43
    INCOP          shift, and go to state 44
    DECOP          shift, and go to state 45
    '('            shift, and go to state 46
    SYM_NULL       shift, and go to state 53
    CHAR_CONST     shift, and go to state 54
    STRING         shift, and go to state 55
    INTEGER_CONST  shift, and go to state 56
    ID             shift, and go to state 57

    unary  go to state 72


State 44

   62 unary: INCOP • unary

    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    '&'            shift, and go to state 43
    INCOP          shift, and go to state 44
    DECOP          shift, and go to state 45
    '('            shift, and go to state 46
    SYM_NULL       shift, and go to state 53
    CHAR_CONST     shift, and go to state 54
    STRING         shift, and go to state 55
    INTEGER_CONST  shift, and go to state 56
    ID             shift, and go to state 57

    unary  go to state 73


State 45

   63 unary: DECOP • unary

    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    '&'            shift, and go to state 43
    INCOP          shift, and go to state 44
    DECOP          shift, and go to state 45
    '('            shift, and go to state 46
    SYM_NULL       shift, and go to state 53
    CHAR_CONST     shift, and go to state 54
    STRING         shift, and go to state 55
    INTEGER_CONST  shift, and go to state 56
    ID             shift, and go to state 57

    unary  go to state 74


State 46

   52 unary: '(' • expr ')'
   53      | '(' • unary ')'

    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    '&'            shift, and go to state 43
    INCOP          shift, and go to state 44
    DECOP          shift, and go to state 45
    '('            shift, and go to state 46
    SYM_NULL       shift, and go to state 53
    CHAR_CONST     shift, and go to state 54
    STRING         shift, and go to state 55
    INTEGER_CONST  shift, and go to state 56
    ID             shift, and go to state 57

    expr    go to state 75
    binary  go to state 63
    unary   go to state 76


State 47

   35 stmt: IF • '(' expr ')' stmt
   36     | IF • '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 77


State 48

   30 stmt: RETURN • expr ';'

    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    '&'            shift, and go to state 43
    INCOP          shift, and go to state 44
    DECOP          shift, and go to state 45
    '('            shift, and go to state 46
    SYM_NULL       shift, and go to state 53
    CHAR_CONST     shift, and go to state 54
    STRING         shift, and go to state 55
    INTEGER_CONST  shift, and go to state 56
    ID             shift, and go to state 57

    expr    go to state 78
    binary  go to state 63
    unary   go to state 64


State 49

   37 stmt: WHILE • '(' expr ')' stmt

    '('  shift, and go to state 79


State 50

   38 stmt: FOR • '(' expr_e ';' expr_e ';' expr_e ')' stmt

    '('  shift, and go to state 80


State 51

   31 stmt: BREAK • ';'

    ';'  shift, and go to state 81


State 52

   32 stmt: CONTINUE • ';'

    ';'  shift, and go to state 82


State 53

   71 unary: SYM_NULL •

    $default  reduce using rule 71 (unary)


State 54

   55 unary: CHAR_CONST •

    $default  reduce using rule 55 (unary)


State 55

   56 unary: STRING •

    $default  reduce using rule 56 (unary)


State 56

   54 unary: INTEGER_CONST •

    $default  reduce using rule 54 (unary)


State 57

   57 unary: ID •

    $default  reduce using rule 57 (unary)


State 58

   33 stmt: ';' •

    $default  reduce using rule 33 (stmt)


State 59

   26 compound_stmt: '{' $@2 def_list stmt_list '}' •

    $default  reduce using rule 26 (compound_stmt)


State 60

   34 stmt: compound_stmt •

    $default  reduce using rule 34 (stmt)


State 61

   27 stmt_list: stmt_list stmt •

    $default  reduce using rule 27 (stmt_list)


State 62

   29 stmt: expr • ';'

    ';'  shift, and go to state 83


State 63

   42 expr: binary •
   43 binary: binary • RELOP binary
   44       | binary • EQUOP binary
   45       | binary • '+' binary
   46       | binary • '-' binary
   47       | binary • '*' binary
   48       | binary • '/' binary
   50       | binary • LOGICAL_AND binary
   51       | binary • LOGICAL_OR binary

    LOGICAL_OR   shift, and go to state 84
    LOGICAL_AND  shift, and go to state 85
    EQUOP        shift, and go to state 86
    RELOP        shift, and go to state 87
    '+'          shift, and go to state 88
    '-'          shift, and go to state 89
    '*'          shift, and go to state 90
    '/'          shift, and go to state 91

    $default  reduce using rule 42 (expr)


State 64

   41 expr: unary • '=' expr
   49 binary: unary •
   60 unary: unary • INCOP
   61      | unary • DECOP
   66      | unary • '[' expr ']'
   67      | unary • '.' ID
   68      | unary • STRUCTOP ID
   69      | unary • '(' args ')'
   70      | unary • '(' ')'

    '='       shift, and go to state 92
    INCOP     shift, and go to state 93
    DECOP     shift, and go to state 94
    '['       shift, and go to state 95
    '('       shift, and go to state 96
    '.'       shift, and go to state 97
    STRUCTOP  shift, and go to state 98

    $default  reduce using rule 49 (binary)


State 65

    5 ext_def: type_specifier pointers ID '[' INTEGER_CONST ']' ';' •

    $default  reduce using rule 5 (ext_def)


State 66

   19 param_decl: type_specifier pointers ID •
   20           | type_specifier pointers ID • '[' INTEGER_CONST ']'

    '['  shift, and go to state 99

    $default  reduce using rule 19 (param_decl)


State 67

   18 param_list: param_list ',' param_decl •

    $default  reduce using rule 18 (param_list)


State 68

   23 def: type_specifier pointers ID • ';'
   24    | type_specifier pointers ID • '[' INTEGER_CONST ']' ';'

    '['  shift, and go to state 100
    ';'  shift, and go to state 101


State 69

   58 unary: '-' unary •
   60      | unary • INCOP
   61      | unary • DECOP
   66      | unary • '[' expr ']'
   67      | unary • '.' ID
   68      | unary • STRUCTOP ID
   69      | unary • '(' args ')'
   70      | unary • '(' ')'

    INCOP     shift, and go to state 93
    DECOP     shift, and go to state 94
    '['       shift, and go to state 95
    '('       shift, and go to state 96
    '.'       shift, and go to state 97
    STRUCTOP  shift, and go to state 98

    $default  reduce using rule 58 (unary)


State 70

   60 unary: unary • INCOP
   61      | unary • DECOP
   65      | '*' unary •
   66      | unary • '[' expr ']'
   67      | unary • '.' ID
   68      | unary • STRUCTOP ID
   69      | unary • '(' args ')'
   70      | unary • '(' ')'

    INCOP     shift, and go to state 93
    DECOP     shift, and go to state 94
    '['       shift, and go to state 95
    '('       shift, and go to state 96
    '.'       shift, and go to state 97
    STRUCTOP  shift, and go to state 98

    $default  reduce using rule 65 (unary)


State 71

   59 unary: '!' unary •
   60      | unary • INCOP
   61      | unary • DECOP
   66      | unary • '[' expr ']'
   67      | unary • '.' ID
   68      | unary • STRUCTOP ID
   69      | unary • '(' args ')'
   70      | unary • '(' ')'

    INCOP     shift, and go to state 93
    DECOP     shift, and go to state 94
    '['       shift, and go to state 95
    '('       shift, and go to state 96
    '.'       shift, and go to state 97
    STRUCTOP  shift, and go to state 98

    $default  reduce using rule 59 (unary)


State 72

   60 unary: unary • INCOP
   61      | unary • DECOP
   64      | '&' unary •
   66      | unary • '[' expr ']'
   67      | unary • '.' ID
   68      | unary • STRUCTOP ID
   69      | unary • '(' args ')'
   70      | unary • '(' ')'

    INCOP     shift, and go to state 93
    DECOP     shift, and go to state 94
    '['       shift, and go to state 95
    '('       shift, and go to state 96
    '.'       shift, and go to state 97
    STRUCTOP  shift, and go to state 98

    $default  reduce using rule 64 (unary)


State 73

   60 unary: unary • INCOP
   61      | unary • DECOP
   62      | INCOP unary •
   66      | unary • '[' expr ']'
   67      | unary • '.' ID
   68      | unary • STRUCTOP ID
   69      | unary • '(' args ')'
   70      | unary • '(' ')'

    INCOP     shift, and go to state 93
    DECOP     shift, and go to state 94
    '['       shift, and go to state 95
    '('       shift, and go to state 96
    '.'       shift, and go to state 97
    STRUCTOP  shift, and go to state 98

    $default  reduce using rule 62 (unary)


State 74

   60 unary: unary • INCOP
   61      | unary • DECOP
   63      | DECOP unary •
   66      | unary • '[' expr ']'
   67      | unary • '.' ID
   68      | unary • STRUCTOP ID
   69      | unary • '(' args ')'
   70      | unary • '(' ')'

    INCOP     shift, and go to state 93
    DECOP     shift, and go to state 94
    '['       shift, and go to state 95
    '('       shift, and go to state 96
    '.'       shift, and go to state 97
    STRUCTOP  shift, and go to state 98

    $default  reduce using rule 63 (unary)


State 75

   52 unary: '(' expr • ')'

    ')'  shift, and go to state 102


State 76

   41 expr: unary • '=' expr
   49 binary: unary •
   53 unary: '(' unary • ')'
   60      | unary • INCOP
   61      | unary • DECOP
   66      | unary • '[' expr ']'
   67      | unary • '.' ID
   68      | unary • STRUCTOP ID
   69      | unary • '(' args ')'
   70      | unary • '(' ')'

    '='       shift, and go to state 92
    INCOP     shift, and go to state 93
    DECOP     shift, and go to state 94
    '['       shift, and go to state 95
    '('       shift, and go to state 96
    ')'       shift, and go to state 103
    '.'       shift, and go to state 97
    STRUCTOP  shift, and go to state 98

    $default  reduce using rule 49 (binary)


State 77

   35 stmt: IF '(' • expr ')' stmt
   36     | IF '(' • expr ')' stmt ELSE stmt

    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    '&'            shift, and go to state 43
    INCOP          shift, and go to state 44
    DECOP          shift, and go to state 45
    '('            shift, and go to state 46
    SYM_NULL       shift, and go to state 53
    CHAR_CONST     shift, and go to state 54
    STRING         shift, and go to state 55
    INTEGER_CONST  shift, and go to state 56
    ID             shift, and go to state 57

    expr    go to state 104
    binary  go to state 63
    unary   go to state 64


State 78

   30 stmt: RETURN expr • ';'

    ';'  shift, and go to state 105


State 79

   37 stmt: WHILE '(' • expr ')' stmt

    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    '&'            shift, and go to state 43
    INCOP          shift, and go to state 44
    DECOP          shift, and go to state 45
    '('            shift, and go to state 46
    SYM_NULL       shift, and go to state 53
    CHAR_CONST     shift, and go to state 54
    STRING         shift, and go to state 55
    INTEGER_CONST  shift, and go to state 56
    ID             shift, and go to state 57

    expr    go to state 106
    binary  go to state 63
    unary   go to state 64


State 80

   38 stmt: FOR '(' • expr_e ';' expr_e ';' expr_e ')' stmt

    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    '&'            shift, and go to state 43
    INCOP          shift, and go to state 44
    DECOP          shift, and go to state 45
    '('            shift, and go to state 46
    SYM_NULL       shift, and go to state 53
    CHAR_CONST     shift, and go to state 54
    STRING         shift, and go to state 55
    INTEGER_CONST  shift, and go to state 56
    ID             shift, and go to state 57

    $default  reduce using rule 40 (expr_e)

    expr_e  go to state 107
    expr    go to state 108
    binary  go to state 63
    unary   go to state 64


State 81

   31 stmt: BREAK ';' •

    $default  reduce using rule 31 (stmt)


State 82

   32 stmt: CONTINUE ';' •

    $default  reduce using rule 32 (stmt)


State 83

   29 stmt: expr ';' •

    $default  reduce using rule 29 (stmt)


State 84

   51 binary: binary LOGICAL_OR • binary

    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    '&'            shift, and go to state 43
    INCOP          shift, and go to state 44
    DECOP          shift, and go to state 45
    '('            shift, and go to state 46
    SYM_NULL       shift, and go to state 53
    CHAR_CONST     shift, and go to state 54
    STRING         shift, and go to state 55
    INTEGER_CONST  shift, and go to state 56
    ID             shift, and go to state 57

    binary  go to state 109
    unary   go to state 110


State 85

   50 binary: binary LOGICAL_AND • binary

    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    '&'            shift, and go to state 43
    INCOP          shift, and go to state 44
    DECOP          shift, and go to state 45
    '('            shift, and go to state 46
    SYM_NULL       shift, and go to state 53
    CHAR_CONST     shift, and go to state 54
    STRING         shift, and go to state 55
    INTEGER_CONST  shift, and go to state 56
    ID             shift, and go to state 57

    binary  go to state 111
    unary   go to state 110


State 86

   44 binary: binary EQUOP • binary

    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    '&'            shift, and go to state 43
    INCOP          shift, and go to state 44
    DECOP          shift, and go to state 45
    '('            shift, and go to state 46
    SYM_NULL       shift, and go to state 53
    CHAR_CONST     shift, and go to state 54
    STRING         shift, and go to state 55
    INTEGER_CONST  shift, and go to state 56
    ID             shift, and go to state 57

    binary  go to state 112
    unary   go to state 110


State 87

   43 binary: binary RELOP • binary

    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    '&'            shift, and go to state 43
    INCOP          shift, and go to state 44
    DECOP          shift, and go to state 45
    '('            shift, and go to state 46
    SYM_NULL       shift, and go to state 53
    CHAR_CONST     shift, and go to state 54
    STRING         shift, and go to state 55
    INTEGER_CONST  shift, and go to state 56
    ID             shift, and go to state 57

    binary  go to state 113
    unary   go to state 110


State 88

   45 binary: binary '+' • binary

    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    '&'            shift, and go to state 43
    INCOP          shift, and go to state 44
    DECOP          shift, and go to state 45
    '('            shift, and go to state 46
    SYM_NULL       shift, and go to state 53
    CHAR_CONST     shift, and go to state 54
    STRING         shift, and go to state 55
    INTEGER_CONST  shift, and go to state 56
    ID             shift, and go to state 57

    binary  go to state 114
    unary   go to state 110


State 89

   46 binary: binary '-' • binary

    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    '&'            shift, and go to state 43
    INCOP          shift, and go to state 44
    DECOP          shift, and go to state 45
    '('            shift, and go to state 46
    SYM_NULL       shift, and go to state 53
    CHAR_CONST     shift, and go to state 54
    STRING         shift, and go to state 55
    INTEGER_CONST  shift, and go to state 56
    ID             shift, and go to state 57

    binary  go to state 115
    unary   go to state 110


State 90

   47 binary: binary '*' • binary

    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    '&'            shift, and go to state 43
    INCOP          shift, and go to state 44
    DECOP          shift, and go to state 45
    '('            shift, and go to state 46
    SYM_NULL       shift, and go to state 53
    CHAR_CONST     shift, and go to state 54
    STRING         shift, and go to state 55
    INTEGER_CONST  shift, and go to state 56
    ID             shift, and go to state 57

    binary  go to state 116
    unary   go to state 110


State 91

   48 binary: binary '/' • binary

    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    '&'            shift, and go to state 43
    INCOP          shift, and go to state 44
    DECOP          shift, and go to state 45
    '('            shift, and go to state 46
    SYM_NULL       shift, and go to state 53
    CHAR_CONST     shift, and go to state 54
    STRING         shift, and go to state 55
    INTEGER_CONST  shift, and go to state 56
    ID             shift, and go to state 57

    binary  go to state 117
    unary   go to state 110


State 92

   41 expr: unary '=' • expr

    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    '&'            shift, and go to state 43
    INCOP          shift, and go to state 44
    DECOP          shift, and go to state 45
    '('            shift, and go to state 46
    SYM_NULL       shift, and go to state 53
    CHAR_CONST     shift, and go to state 54
    STRING         shift, and go to state 55
    INTEGER_CONST  shift, and go to state 56
    ID             shift, and go to state 57

    expr    go to state 118
    binary  go to state 63
    unary   go to state 64


State 93

   60 unary: unary INCOP •

    $default  reduce using rule 60 (unary)


State 94

   61 unary: unary DECOP •

    $default  reduce using rule 61 (unary)


State 95

   66 unary: unary '[' • expr ']'

    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    '&'            shift, and go to state 43
    INCOP          shift, and go to state 44
    DECOP          shift, and go to state 45
    '('            shift, and go to state 46
    SYM_NULL       shift, and go to state 53
    CHAR_CONST     shift, and go to state 54
    STRING         shift, and go to state 55
    INTEGER_CONST  shift, and go to state 56
    ID             shift, and go to state 57

    expr    go to state 119
    binary  go to state 63
    unary   go to state 64


State 96

   69 unary: unary '(' • args ')'
   70      | unary '(' • ')'

    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    '&'            shift, and go to state 43
    INCOP          shift, and go to state 44
    DECOP          shift, and go to state 45
    '('            shift, and go to state 46
    ')'            shift, and go to state 120
    SYM_NULL       shift, and go to state 53
    CHAR_CONST     shift, and go to state 54
    STRING         shift, and go to state 55
    INTEGER_CONST  shift, and go to state 56
    ID             shift, and go to state 57

    expr    go to state 121
    binary  go to state 63
    unary   go to state 64
    args    go to state 122


State 97

   67 unary: unary '.' • ID

    ID  shift, and go to state 123


State 98

   68 unary: unary STRUCTOP • ID

    ID  shift, and go to state 124


State 99

   20 param_decl: type_specifier pointers ID '[' • INTEGER_CONST ']'

    INTEGER_CONST  shift, and go to state 125


State 100

   24 def: type_specifier pointers ID '[' • INTEGER_CONST ']' ';'

    INTEGER_CONST  shift, and go to state 126


State 101

   23 def: type_specifier pointers ID ';' •

    $default  reduce using rule 23 (def)


State 102

   52 unary: '(' expr ')' •

    $default  reduce using rule 52 (unary)


State 103

   53 unary: '(' unary ')' •

    $default  reduce using rule 53 (unary)


State 104

   35 stmt: IF '(' expr • ')' stmt
   36     | IF '(' expr • ')' stmt ELSE stmt

    ')'  shift, and go to state 127


State 105

   30 stmt: RETURN expr ';' •

    $default  reduce using rule 30 (stmt)


State 106

   37 stmt: WHILE '(' expr • ')' stmt

    ')'  shift, and go to state 128


State 107

   38 stmt: FOR '(' expr_e • ';' expr_e ';' expr_e ')' stmt

    ';'  shift, and go to state 129


State 108

   39 expr_e: expr •

    $default  reduce using rule 39 (expr_e)


State 109

   43 binary: binary • RELOP binary
   44       | binary • EQUOP binary
   45       | binary • '+' binary
   46       | binary • '-' binary
   47       | binary • '*' binary
   48       | binary • '/' binary
   50       | binary • LOGICAL_AND binary
   51       | binary • LOGICAL_OR binary
   51       | binary LOGICAL_OR binary •

    LOGICAL_AND  shift, and go to state 85
    EQUOP        shift, and go to state 86
    RELOP        shift, and go to state 87
    '+'          shift, and go to state 88
    '-'          shift, and go to state 89
    '*'          shift, and go to state 90
    '/'          shift, and go to state 91

    $default  reduce using rule 51 (binary)


State 110

   49 binary: unary •
   60 unary: unary • INCOP
   61      | unary • DECOP
   66      | unary • '[' expr ']'
   67      | unary • '.' ID
   68      | unary • STRUCTOP ID
   69      | unary • '(' args ')'
   70      | unary • '(' ')'

    INCOP     shift, and go to state 93
    DECOP     shift, and go to state 94
    '['       shift, and go to state 95
    '('       shift, and go to state 96
    '.'       shift, and go to state 97
    STRUCTOP  shift, and go to state 98

    $default  reduce using rule 49 (binary)


State 111

   43 binary: binary • RELOP binary
   44       | binary • EQUOP binary
   45       | binary • '+' binary
   46       | binary • '-' binary
   47       | binary • '*' binary
   48       | binary • '/' binary
   50       | binary • LOGICAL_AND binary
   50       | binary LOGICAL_AND binary •
   51       | binary • LOGICAL_OR binary

    EQUOP  shift, and go to state 86
    RELOP  shift, and go to state 87
    '+'    shift, and go to state 88
    '-'    shift, and go to state 89
    '*'    shift, and go to state 90
    '/'    shift, and go to state 91

    $default  reduce using rule 50 (binary)


State 112

   43 binary: binary • RELOP binary
   44       | binary • EQUOP binary
   44       | binary EQUOP binary •
   45       | binary • '+' binary
   46       | binary • '-' binary
   47       | binary • '*' binary
   48       | binary • '/' binary
   50       | binary • LOGICAL_AND binary
   51       | binary • LOGICAL_OR binary

    RELOP  shift, and go to state 87
    '+'    shift, and go to state 88
    '-'    shift, and go to state 89
    '*'    shift, and go to state 90
    '/'    shift, and go to state 91

    $default  reduce using rule 44 (binary)


State 113

   43 binary: binary • RELOP binary
   43       | binary RELOP binary •
   44       | binary • EQUOP binary
   45       | binary • '+' binary
   46       | binary • '-' binary
   47       | binary • '*' binary
   48       | binary • '/' binary
   50       | binary • LOGICAL_AND binary
   51       | binary • LOGICAL_OR binary

    '+'  shift, and go to state 88
    '-'  shift, and go to state 89
    '*'  shift, and go to state 90
    '/'  shift, and go to state 91

    $default  reduce using rule 43 (binary)


State 114

   43 binary: binary • RELOP binary
   44       | binary • EQUOP binary
   45       | binary • '+' binary
   45       | binary '+' binary •
   46       | binary • '-' binary
   47       | binary • '*' binary
   48       | binary • '/' binary
   50       | binary • LOGICAL_AND binary
   51       | binary • LOGICAL_OR binary

    '*'  shift, and go to state 90
    '/'  shift, and go to state 91

    $default  reduce using rule 45 (binary)


State 115

   43 binary: binary • RELOP binary
   44       | binary • EQUOP binary
   45       | binary • '+' binary
   46       | binary • '-' binary
   46       | binary '-' binary •
   47       | binary • '*' binary
   48       | binary • '/' binary
   50       | binary • LOGICAL_AND binary
   51       | binary • LOGICAL_OR binary

    '*'  shift, and go to state 90
    '/'  shift, and go to state 91

    $default  reduce using rule 46 (binary)


State 116

   43 binary: binary • RELOP binary
   44       | binary • EQUOP binary
   45       | binary • '+' binary
   46       | binary • '-' binary
   47       | binary • '*' binary
   47       | binary '*' binary •
   48       | binary • '/' binary
   50       | binary • LOGICAL_AND binary
   51       | binary • LOGICAL_OR binary

    $default  reduce using rule 47 (binary)


State 117

   43 binary: binary • RELOP binary
   44       | binary • EQUOP binary
   45       | binary • '+' binary
   46       | binary • '-' binary
   47       | binary • '*' binary
   48       | binary • '/' binary
   48       | binary '/' binary •
   50       | binary • LOGICAL_AND binary
   51       | binary • LOGICAL_OR binary

    $default  reduce using rule 48 (binary)


State 118

   41 expr: unary '=' expr •

    $default  reduce using rule 41 (expr)


State 119

   66 unary: unary '[' expr • ']'

    ']'  shift, and go to state 130


State 120

   70 unary: unary '(' ')' •

    $default  reduce using rule 70 (unary)


State 121

   72 args: expr •

    $default  reduce using rule 72 (args)


State 122

   69 unary: unary '(' args • ')'
   73 args: args • ',' expr

    ','  shift, and go to state 131
    ')'  shift, and go to state 132


State 123

   67 unary: unary '.' ID •

    $default  reduce using rule 67 (unary)


State 124

   68 unary: unary STRUCTOP ID •

    $default  reduce using rule 68 (unary)


State 125

   20 param_decl: type_specifier pointers ID '[' INTEGER_CONST • ']'

    ']'  shift, and go to state 133


State 126

   24 def: type_specifier pointers ID '[' INTEGER_CONST • ']' ';'

    ']'  shift, and go to state 134


State 127

   35 stmt: IF '(' expr ')' • stmt
   36     | IF '(' expr ')' • stmt ELSE stmt

    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    '&'            shift, and go to state 43
    INCOP          shift, and go to state 44
    DECOP          shift, and go to state 45
    '('            shift, and go to state 46
    IF             shift, and go to state 47
    RETURN         shift, and go to state 48
    WHILE          shift, and go to state 49
    FOR            shift, and go to state 50
    BREAK          shift, and go to state 51
    CONTINUE       shift, and go to state 52
    SYM_NULL       shift, and go to state 53
    CHAR_CONST     shift, and go to state 54
    STRING         shift, and go to state 55
    INTEGER_CONST  shift, and go to state 56
    ID             shift, and go to state 57
    ';'            shift, and go to state 58
    '{'            shift, and go to state 14

    compound_stmt  go to state 60
    stmt           go to state 135
    expr           go to state 62
    binary         go to state 63
    unary          go to state 64


State 128

   37 stmt: WHILE '(' expr ')' • stmt

    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    '&'            shift, and go to state 43
    INCOP          shift, and go to state 44
    DECOP          shift, and go to state 45
    '('            shift, and go to state 46
    IF             shift, and go to state 47
    RETURN         shift, and go to state 48
    WHILE          shift, and go to state 49
    FOR            shift, and go to state 50
    BREAK          shift, and go to state 51
    CONTINUE       shift, and go to state 52
    SYM_NULL       shift, and go to state 53
    CHAR_CONST     shift, and go to state 54
    STRING         shift, and go to state 55
    INTEGER_CONST  shift, and go to state 56
    ID             shift, and go to state 57
    ';'            shift, and go to state 58
    '{'            shift, and go to state 14

    compound_stmt  go to state 60
    stmt           go to state 136
    expr           go to state 62
    binary         go to state 63
    unary          go to state 64


State 129

   38 stmt: FOR '(' expr_e ';' • expr_e ';' expr_e ')' stmt

    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    '&'            shift, and go to state 43
    INCOP          shift, and go to state 44
    DECOP          shift, and go to state 45
    '('            shift, and go to state 46
    SYM_NULL       shift, and go to state 53
    CHAR_CONST     shift, and go to state 54
    STRING         shift, and go to state 55
    INTEGER_CONST  shift, and go to state 56
    ID             shift, and go to state 57

    $default  reduce using rule 40 (expr_e)

    expr_e  go to state 137
    expr    go to state 108
    binary  go to state 63
    unary   go to state 64


State 130

   66 unary: unary '[' expr ']' •

    $default  reduce using rule 66 (unary)


State 131

   73 args: args ',' • expr

    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    '&'            shift, and go to state 43
    INCOP          shift, and go to state 44
    DECOP          shift, and go to state 45
    '('            shift, and go to state 46
    SYM_NULL       shift, and go to state 53
    CHAR_CONST     shift, and go to state 54
    STRING         shift, and go to state 55
    INTEGER_CONST  shift, and go to state 56
    ID             shift, and go to state 57

    expr    go to state 138
    binary  go to state 63
    unary   go to state 64


State 132

   69 unary: unary '(' args ')' •

    $default  reduce using rule 69 (unary)


State 133

   20 param_decl: type_specifier pointers ID '[' INTEGER_CONST ']' •

    $default  reduce using rule 20 (param_decl)


State 134

   24 def: type_specifier pointers ID '[' INTEGER_CONST ']' • ';'

    ';'  shift, and go to state 139


State 135

   35 stmt: IF '(' expr ')' stmt •
   36     | IF '(' expr ')' stmt • ELSE stmt

    ELSE  shift, and go to state 140

    $default  reduce using rule 35 (stmt)


State 136

   37 stmt: WHILE '(' expr ')' stmt •

    $default  reduce using rule 37 (stmt)


State 137

   38 stmt: FOR '(' expr_e ';' expr_e • ';' expr_e ')' stmt

    ';'  shift, and go to state 141


State 138

   73 args: args ',' expr •

    $default  reduce using rule 73 (args)


State 139

   24 def: type_specifier pointers ID '[' INTEGER_CONST ']' ';' •

    $default  reduce using rule 24 (def)


State 140

   36 stmt: IF '(' expr ')' stmt ELSE • stmt

    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    '&'            shift, and go to state 43
    INCOP          shift, and go to state 44
    DECOP          shift, and go to state 45
    '('            shift, and go to state 46
    IF             shift, and go to state 47
    RETURN         shift, and go to state 48
    WHILE          shift, and go to state 49
    FOR            shift, and go to state 50
    BREAK          shift, and go to state 51
    CONTINUE       shift, and go to state 52
    SYM_NULL       shift, and go to state 53
    CHAR_CONST     shift, and go to state 54
    STRING         shift, and go to state 55
    INTEGER_CONST  shift, and go to state 56
    ID             shift, and go to state 57
    ';'            shift, and go to state 58
    '{'            shift, and go to state 14

    compound_stmt  go to state 60
    stmt           go to state 142
    expr           go to state 62
    binary         go to state 63
    unary          go to state 64


State 141

   38 stmt: FOR '(' expr_e ';' expr_e ';' • expr_e ')' stmt

    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    '&'            shift, and go to state 43
    INCOP          shift, and go to state 44
    DECOP          shift, and go to state 45
    '('            shift, and go to state 46
    SYM_NULL       shift, and go to state 53
    CHAR_CONST     shift, and go to state 54
    STRING         shift, and go to state 55
    INTEGER_CONST  shift, and go to state 56
    ID             shift, and go to state 57

    $default  reduce using rule 40 (expr_e)

    expr_e  go to state 143
    expr    go to state 108
    binary  go to state 63
    unary   go to state 64


State 142

   36 stmt: IF '(' expr ')' stmt ELSE stmt •

    $default  reduce using rule 36 (stmt)


State 143

   38 stmt: FOR '(' expr_e ';' expr_e ';' expr_e • ')' stmt

    ')'  shift, and go to state 144


State 144

   38 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' • stmt

    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    '&'            shift, and go to state 43
    INCOP          shift, and go to state 44
    DECOP          shift, and go to state 45
    '('            shift, and go to state 46
    IF             shift, and go to state 47
    RETURN         shift, and go to state 48
    WHILE          shift, and go to state 49
    FOR            shift, and go to state 50
    BREAK          shift, and go to state 51
    CONTINUE       shift, and go to state 52
    SYM_NULL       shift, and go to state 53
    CHAR_CONST     shift, and go to state 54
    STRING         shift, and go to state 55
    INTEGER_CONST  shift, and go to state 56
    ID             shift, and go to state 57
    ';'            shift, and go to state 58
    '{'            shift, and go to state 14

    compound_stmt  go to state 60
    stmt           go to state 145
    expr           go to state 62
    binary         go to state 63
    unary          go to state 64


State 145

   38 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt •

    $default  reduce using rule 38 (stmt)
