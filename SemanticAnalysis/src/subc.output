Terminals unused in grammar

    '%'


Grammar

    0 $accept: program $end

    1 program: ext_def_list

    2 ext_def_list: ext_def_list ext_def
    3             | ε

    4 ext_def: type_specifier pointers ID ';'
    5        | type_specifier pointers ID '[' INTEGER_CONST ']' ';'
    6        | struct_specifier ';'
    7        | func_decl compound_stmt

    8 type_specifier: TYPE
    9               | struct_specifier

   10 struct_specifier: STRUCT ID '{' def_list '}'
   11                 | STRUCT ID

   12 func_decl: type_specifier pointers ID '(' ')'
   13          | type_specifier pointers ID '(' param_list ')'

   14 pointers: '*'
   15         | ε

   16 param_list: param_decl
   17           | param_list ',' param_decl

   18 param_decl: type_specifier pointers ID
   19           | type_specifier pointers ID '[' INTEGER_CONST ']'

   20 def_list: def_list def
   21         | ε

   22 def: type_specifier pointers ID ';'
   23    | type_specifier pointers ID '[' INTEGER_CONST ']' ';'

   24 $@1: ε

   25 compound_stmt: '{' $@1 def_list stmt_list '}'

   26 stmt_list: stmt_list stmt
   27          | ε

   28 stmt: expr ';'
   29     | RETURN expr ';'
   30     | BREAK ';'
   31     | CONTINUE ';'
   32     | ';'
   33     | compound_stmt
   34     | IF '(' expr ')' stmt
   35     | IF '(' expr ')' stmt ELSE stmt
   36     | WHILE '(' expr ')' stmt
   37     | FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt

   38 expr_e: expr
   39       | ε

   40 expr: unary '=' expr
   41     | binary

   42 binary: binary RELOP binary
   43       | binary EQUOP binary
   44       | binary '+' binary
   45       | binary '-' binary
   46       | binary '*' binary
   47       | binary '/' binary
   48       | unary
   49       | binary LOGICAL_AND binary
   50       | binary LOGICAL_OR binary

   51 unary: '(' expr ')'
   52      | '(' unary ')'
   53      | INTEGER_CONST
   54      | CHAR_CONST
   55      | STRING
   56      | ID
   57      | '-' unary
   58      | '!' unary
   59      | unary INCOP
   60      | unary DECOP
   61      | INCOP unary
   62      | DECOP unary
   63      | '&' unary
   64      | '*' unary
   65      | unary '[' expr ']'
   66      | unary '.' ID
   67      | unary STRUCTOP ID
   68      | unary '(' args ')'
   69      | unary '(' ')'
   70      | SYM_NULL

   71 args: expr
   72     | args ',' expr


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 58
    '%' (37)
    '&' (38) 63
    '(' (40) 12 13 34 35 36 37 51 52 68 69
    ')' (41) 12 13 34 35 36 37 51 52 68 69
    '*' (42) 14 46 64
    '+' (43) 44
    ',' (44) 17 72
    '-' (45) 45 57
    '.' (46) 66
    '/' (47) 47
    ';' (59) 4 5 6 22 23 28 29 30 31 32 37
    '=' (61) 40
    '[' (91) 5 19 23 65
    ']' (93) 5 19 23 65
    '{' (123) 10 25
    '}' (125) 10 25
    error (256)
    LOGICAL_OR (258) 50
    LOGICAL_AND (259) 49
    EQUOP (260) 43
    RELOP (261) 42
    INCOP (262) 59 61
    DECOP (263) 60 62
    STRUCTOP (264) 67
    IF (265) 34 35
    ELSE (266) 35
    STRUCT (267) 10 11
    RETURN (268) 29
    WHILE (269) 36
    FOR (270) 37
    BREAK (271) 30
    CONTINUE (272) 31
    SYM_NULL (273) 70
    TYPE <stringVal> (274) 8
    CHAR_CONST (275) 54
    STRING (276) 55
    INTEGER_CONST <intVal> (277) 5 19 23 53
    ID <stringVal> (278) 4 5 10 11 12 13 18 19 22 23 56 66 67


Nonterminals, with rules where they appear

    $accept (41)
        on left: 0
    program (42)
        on left: 1
        on right: 0
    ext_def_list (43)
        on left: 2 3
        on right: 1 2
    ext_def (44)
        on left: 4 5 6 7
        on right: 2
    type_specifier <typeInfo> (45)
        on left: 8 9
        on right: 4 5 12 13 18 19 22 23
    struct_specifier <typeInfo> (46)
        on left: 10 11
        on right: 6 9
    func_decl (47)
        on left: 12 13
        on right: 7
    pointers (48)
        on left: 14 15
        on right: 4 5 12 13 18 19 22 23
    param_list (49)
        on left: 16 17
        on right: 13 17
    param_decl (50)
        on left: 18 19
        on right: 16 17
    def_list (51)
        on left: 20 21
        on right: 10 20 25
    def (52)
        on left: 22 23
        on right: 20
    compound_stmt (53)
        on left: 25
        on right: 7 33
    $@1 (54)
        on left: 24
        on right: 25
    stmt_list (55)
        on left: 26 27
        on right: 25 26
    stmt (56)
        on left: 28 29 30 31 32 33 34 35 36 37
        on right: 26 34 35 36 37
    expr_e (57)
        on left: 38 39
        on right: 37
    expr <typeInfo> (58)
        on left: 40 41
        on right: 28 29 34 35 36 38 40 51 65 71 72
    binary <typeInfo> (59)
        on left: 42 43 44 45 46 47 48 49 50
        on right: 41 42 43 44 45 46 47 49 50
    unary <typeInfo> (60)
        on left: 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70
        on right: 40 48 52 57 58 59 60 61 62 63 64 65 66 67 68 69
    args (61)
        on left: 71 72
        on right: 68 72


State 0

    0 $accept: • program $end

    $default  reduce using rule 3 (ext_def_list)

    program       go to state 1
    ext_def_list  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: ext_def_list •
    2 ext_def_list: ext_def_list • ext_def

    STRUCT  shift, and go to state 4
    TYPE    shift, and go to state 5

    $default  reduce using rule 1 (program)

    ext_def           go to state 6
    type_specifier    go to state 7
    struct_specifier  go to state 8
    func_decl         go to state 9


State 3

    0 $accept: program $end •

    $default  accept


State 4

   10 struct_specifier: STRUCT • ID '{' def_list '}'
   11                 | STRUCT • ID

    ID  shift, and go to state 10


State 5

    8 type_specifier: TYPE •

    $default  reduce using rule 8 (type_specifier)


State 6

    2 ext_def_list: ext_def_list ext_def •

    $default  reduce using rule 2 (ext_def_list)


State 7

    4 ext_def: type_specifier • pointers ID ';'
    5        | type_specifier • pointers ID '[' INTEGER_CONST ']' ';'
   12 func_decl: type_specifier • pointers ID '(' ')'
   13          | type_specifier • pointers ID '(' param_list ')'

    '*'  shift, and go to state 11

    $default  reduce using rule 15 (pointers)

    pointers  go to state 12


State 8

    6 ext_def: struct_specifier • ';'
    9 type_specifier: struct_specifier •

    ';'  shift, and go to state 13

    $default  reduce using rule 9 (type_specifier)


State 9

    7 ext_def: func_decl • compound_stmt

    '{'  shift, and go to state 14

    compound_stmt  go to state 15


State 10

   10 struct_specifier: STRUCT ID • '{' def_list '}'
   11                 | STRUCT ID •

    '{'  shift, and go to state 16

    $default  reduce using rule 11 (struct_specifier)


State 11

   14 pointers: '*' •

    $default  reduce using rule 14 (pointers)


State 12

    4 ext_def: type_specifier pointers • ID ';'
    5        | type_specifier pointers • ID '[' INTEGER_CONST ']' ';'
   12 func_decl: type_specifier pointers • ID '(' ')'
   13          | type_specifier pointers • ID '(' param_list ')'

    ID  shift, and go to state 17


State 13

    6 ext_def: struct_specifier ';' •

    $default  reduce using rule 6 (ext_def)


State 14

   25 compound_stmt: '{' • $@1 def_list stmt_list '}'

    $default  reduce using rule 24 ($@1)

    $@1  go to state 18


State 15

    7 ext_def: func_decl compound_stmt •

    $default  reduce using rule 7 (ext_def)


State 16

   10 struct_specifier: STRUCT ID '{' • def_list '}'

    $default  reduce using rule 21 (def_list)

    def_list  go to state 19


State 17

    4 ext_def: type_specifier pointers ID • ';'
    5        | type_specifier pointers ID • '[' INTEGER_CONST ']' ';'
   12 func_decl: type_specifier pointers ID • '(' ')'
   13          | type_specifier pointers ID • '(' param_list ')'

    '['  shift, and go to state 20
    '('  shift, and go to state 21
    ';'  shift, and go to state 22


State 18

   25 compound_stmt: '{' $@1 • def_list stmt_list '}'

    $default  reduce using rule 21 (def_list)

    def_list  go to state 23


State 19

   10 struct_specifier: STRUCT ID '{' def_list • '}'
   20 def_list: def_list • def

    STRUCT  shift, and go to state 4
    TYPE    shift, and go to state 5
    '}'     shift, and go to state 24

    type_specifier    go to state 25
    struct_specifier  go to state 26
    def               go to state 27


State 20

    5 ext_def: type_specifier pointers ID '[' • INTEGER_CONST ']' ';'

    INTEGER_CONST  shift, and go to state 28


State 21

   12 func_decl: type_specifier pointers ID '(' • ')'
   13          | type_specifier pointers ID '(' • param_list ')'

    ')'     shift, and go to state 29
    STRUCT  shift, and go to state 4
    TYPE    shift, and go to state 5

    type_specifier    go to state 30
    struct_specifier  go to state 26
    param_list        go to state 31
    param_decl        go to state 32


State 22

    4 ext_def: type_specifier pointers ID ';' •

    $default  reduce using rule 4 (ext_def)


State 23

   20 def_list: def_list • def
   25 compound_stmt: '{' $@1 def_list • stmt_list '}'

    STRUCT  shift, and go to state 4
    TYPE    shift, and go to state 5

    $default  reduce using rule 27 (stmt_list)

    type_specifier    go to state 25
    struct_specifier  go to state 26
    def               go to state 27
    stmt_list         go to state 33


State 24

   10 struct_specifier: STRUCT ID '{' def_list '}' •

    $default  reduce using rule 10 (struct_specifier)


State 25

   22 def: type_specifier • pointers ID ';'
   23    | type_specifier • pointers ID '[' INTEGER_CONST ']' ';'

    '*'  shift, and go to state 11

    $default  reduce using rule 15 (pointers)

    pointers  go to state 34


State 26

    9 type_specifier: struct_specifier •

    $default  reduce using rule 9 (type_specifier)


State 27

   20 def_list: def_list def •

    $default  reduce using rule 20 (def_list)


State 28

    5 ext_def: type_specifier pointers ID '[' INTEGER_CONST • ']' ';'

    ']'  shift, and go to state 35


State 29

   12 func_decl: type_specifier pointers ID '(' ')' •

    $default  reduce using rule 12 (func_decl)


State 30

   18 param_decl: type_specifier • pointers ID
   19           | type_specifier • pointers ID '[' INTEGER_CONST ']'

    '*'  shift, and go to state 11

    $default  reduce using rule 15 (pointers)

    pointers  go to state 36


State 31

   13 func_decl: type_specifier pointers ID '(' param_list • ')'
   17 param_list: param_list • ',' param_decl

    ','  shift, and go to state 37
    ')'  shift, and go to state 38


State 32

   16 param_list: param_decl •

    $default  reduce using rule 16 (param_list)


State 33

   25 compound_stmt: '{' $@1 def_list stmt_list • '}'
   26 stmt_list: stmt_list • stmt

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    IF             shift, and go to state 46
    RETURN         shift, and go to state 47
    WHILE          shift, and go to state 48
    FOR            shift, and go to state 49
    BREAK          shift, and go to state 50
    CONTINUE       shift, and go to state 51
    SYM_NULL       shift, and go to state 52
    CHAR_CONST     shift, and go to state 53
    STRING         shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56
    ';'            shift, and go to state 57
    '{'            shift, and go to state 14
    '}'            shift, and go to state 58

    compound_stmt  go to state 59
    stmt           go to state 60
    expr           go to state 61
    binary         go to state 62
    unary          go to state 63


State 34

   22 def: type_specifier pointers • ID ';'
   23    | type_specifier pointers • ID '[' INTEGER_CONST ']' ';'

    ID  shift, and go to state 64


State 35

    5 ext_def: type_specifier pointers ID '[' INTEGER_CONST ']' • ';'

    ';'  shift, and go to state 65


State 36

   18 param_decl: type_specifier pointers • ID
   19           | type_specifier pointers • ID '[' INTEGER_CONST ']'

    ID  shift, and go to state 66


State 37

   17 param_list: param_list ',' • param_decl

    STRUCT  shift, and go to state 4
    TYPE    shift, and go to state 5

    type_specifier    go to state 30
    struct_specifier  go to state 26
    param_decl        go to state 67


State 38

   13 func_decl: type_specifier pointers ID '(' param_list ')' •

    $default  reduce using rule 13 (func_decl)


State 39

   57 unary: '-' • unary

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    SYM_NULL       shift, and go to state 52
    CHAR_CONST     shift, and go to state 53
    STRING         shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    unary  go to state 68


State 40

   64 unary: '*' • unary

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    SYM_NULL       shift, and go to state 52
    CHAR_CONST     shift, and go to state 53
    STRING         shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    unary  go to state 69


State 41

   58 unary: '!' • unary

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    SYM_NULL       shift, and go to state 52
    CHAR_CONST     shift, and go to state 53
    STRING         shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    unary  go to state 70


State 42

   63 unary: '&' • unary

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    SYM_NULL       shift, and go to state 52
    CHAR_CONST     shift, and go to state 53
    STRING         shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    unary  go to state 71


State 43

   61 unary: INCOP • unary

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    SYM_NULL       shift, and go to state 52
    CHAR_CONST     shift, and go to state 53
    STRING         shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    unary  go to state 72


State 44

   62 unary: DECOP • unary

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    SYM_NULL       shift, and go to state 52
    CHAR_CONST     shift, and go to state 53
    STRING         shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    unary  go to state 73


State 45

   51 unary: '(' • expr ')'
   52      | '(' • unary ')'

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    SYM_NULL       shift, and go to state 52
    CHAR_CONST     shift, and go to state 53
    STRING         shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    expr    go to state 74
    binary  go to state 62
    unary   go to state 75


State 46

   34 stmt: IF • '(' expr ')' stmt
   35     | IF • '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 76


State 47

   29 stmt: RETURN • expr ';'

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    SYM_NULL       shift, and go to state 52
    CHAR_CONST     shift, and go to state 53
    STRING         shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    expr    go to state 77
    binary  go to state 62
    unary   go to state 63


State 48

   36 stmt: WHILE • '(' expr ')' stmt

    '('  shift, and go to state 78


State 49

   37 stmt: FOR • '(' expr_e ';' expr_e ';' expr_e ')' stmt

    '('  shift, and go to state 79


State 50

   30 stmt: BREAK • ';'

    ';'  shift, and go to state 80


State 51

   31 stmt: CONTINUE • ';'

    ';'  shift, and go to state 81


State 52

   70 unary: SYM_NULL •

    $default  reduce using rule 70 (unary)


State 53

   54 unary: CHAR_CONST •

    $default  reduce using rule 54 (unary)


State 54

   55 unary: STRING •

    $default  reduce using rule 55 (unary)


State 55

   53 unary: INTEGER_CONST •

    $default  reduce using rule 53 (unary)


State 56

   56 unary: ID •

    $default  reduce using rule 56 (unary)


State 57

   32 stmt: ';' •

    $default  reduce using rule 32 (stmt)


State 58

   25 compound_stmt: '{' $@1 def_list stmt_list '}' •

    $default  reduce using rule 25 (compound_stmt)


State 59

   33 stmt: compound_stmt •

    $default  reduce using rule 33 (stmt)


State 60

   26 stmt_list: stmt_list stmt •

    $default  reduce using rule 26 (stmt_list)


State 61

   28 stmt: expr • ';'

    ';'  shift, and go to state 82


State 62

   41 expr: binary •
   42 binary: binary • RELOP binary
   43       | binary • EQUOP binary
   44       | binary • '+' binary
   45       | binary • '-' binary
   46       | binary • '*' binary
   47       | binary • '/' binary
   49       | binary • LOGICAL_AND binary
   50       | binary • LOGICAL_OR binary

    LOGICAL_OR   shift, and go to state 83
    LOGICAL_AND  shift, and go to state 84
    EQUOP        shift, and go to state 85
    RELOP        shift, and go to state 86
    '+'          shift, and go to state 87
    '-'          shift, and go to state 88
    '*'          shift, and go to state 89
    '/'          shift, and go to state 90

    $default  reduce using rule 41 (expr)


State 63

   40 expr: unary • '=' expr
   48 binary: unary •
   59 unary: unary • INCOP
   60      | unary • DECOP
   65      | unary • '[' expr ']'
   66      | unary • '.' ID
   67      | unary • STRUCTOP ID
   68      | unary • '(' args ')'
   69      | unary • '(' ')'

    '='       shift, and go to state 91
    INCOP     shift, and go to state 92
    DECOP     shift, and go to state 93
    '['       shift, and go to state 94
    '('       shift, and go to state 95
    '.'       shift, and go to state 96
    STRUCTOP  shift, and go to state 97

    $default  reduce using rule 48 (binary)


State 64

   22 def: type_specifier pointers ID • ';'
   23    | type_specifier pointers ID • '[' INTEGER_CONST ']' ';'

    '['  shift, and go to state 98
    ';'  shift, and go to state 99


State 65

    5 ext_def: type_specifier pointers ID '[' INTEGER_CONST ']' ';' •

    $default  reduce using rule 5 (ext_def)


State 66

   18 param_decl: type_specifier pointers ID •
   19           | type_specifier pointers ID • '[' INTEGER_CONST ']'

    '['  shift, and go to state 100

    $default  reduce using rule 18 (param_decl)


State 67

   17 param_list: param_list ',' param_decl •

    $default  reduce using rule 17 (param_list)


State 68

   57 unary: '-' unary •
   59      | unary • INCOP
   60      | unary • DECOP
   65      | unary • '[' expr ']'
   66      | unary • '.' ID
   67      | unary • STRUCTOP ID
   68      | unary • '(' args ')'
   69      | unary • '(' ')'

    INCOP     shift, and go to state 92
    DECOP     shift, and go to state 93
    '['       shift, and go to state 94
    '('       shift, and go to state 95
    '.'       shift, and go to state 96
    STRUCTOP  shift, and go to state 97

    $default  reduce using rule 57 (unary)


State 69

   59 unary: unary • INCOP
   60      | unary • DECOP
   64      | '*' unary •
   65      | unary • '[' expr ']'
   66      | unary • '.' ID
   67      | unary • STRUCTOP ID
   68      | unary • '(' args ')'
   69      | unary • '(' ')'

    INCOP     shift, and go to state 92
    DECOP     shift, and go to state 93
    '['       shift, and go to state 94
    '('       shift, and go to state 95
    '.'       shift, and go to state 96
    STRUCTOP  shift, and go to state 97

    $default  reduce using rule 64 (unary)


State 70

   58 unary: '!' unary •
   59      | unary • INCOP
   60      | unary • DECOP
   65      | unary • '[' expr ']'
   66      | unary • '.' ID
   67      | unary • STRUCTOP ID
   68      | unary • '(' args ')'
   69      | unary • '(' ')'

    INCOP     shift, and go to state 92
    DECOP     shift, and go to state 93
    '['       shift, and go to state 94
    '('       shift, and go to state 95
    '.'       shift, and go to state 96
    STRUCTOP  shift, and go to state 97

    $default  reduce using rule 58 (unary)


State 71

   59 unary: unary • INCOP
   60      | unary • DECOP
   63      | '&' unary •
   65      | unary • '[' expr ']'
   66      | unary • '.' ID
   67      | unary • STRUCTOP ID
   68      | unary • '(' args ')'
   69      | unary • '(' ')'

    INCOP     shift, and go to state 92
    DECOP     shift, and go to state 93
    '['       shift, and go to state 94
    '('       shift, and go to state 95
    '.'       shift, and go to state 96
    STRUCTOP  shift, and go to state 97

    $default  reduce using rule 63 (unary)


State 72

   59 unary: unary • INCOP
   60      | unary • DECOP
   61      | INCOP unary •
   65      | unary • '[' expr ']'
   66      | unary • '.' ID
   67      | unary • STRUCTOP ID
   68      | unary • '(' args ')'
   69      | unary • '(' ')'

    INCOP     shift, and go to state 92
    DECOP     shift, and go to state 93
    '['       shift, and go to state 94
    '('       shift, and go to state 95
    '.'       shift, and go to state 96
    STRUCTOP  shift, and go to state 97

    $default  reduce using rule 61 (unary)


State 73

   59 unary: unary • INCOP
   60      | unary • DECOP
   62      | DECOP unary •
   65      | unary • '[' expr ']'
   66      | unary • '.' ID
   67      | unary • STRUCTOP ID
   68      | unary • '(' args ')'
   69      | unary • '(' ')'

    INCOP     shift, and go to state 92
    DECOP     shift, and go to state 93
    '['       shift, and go to state 94
    '('       shift, and go to state 95
    '.'       shift, and go to state 96
    STRUCTOP  shift, and go to state 97

    $default  reduce using rule 62 (unary)


State 74

   51 unary: '(' expr • ')'

    ')'  shift, and go to state 101


State 75

   40 expr: unary • '=' expr
   48 binary: unary •
   52 unary: '(' unary • ')'
   59      | unary • INCOP
   60      | unary • DECOP
   65      | unary • '[' expr ']'
   66      | unary • '.' ID
   67      | unary • STRUCTOP ID
   68      | unary • '(' args ')'
   69      | unary • '(' ')'

    '='       shift, and go to state 91
    INCOP     shift, and go to state 92
    DECOP     shift, and go to state 93
    '['       shift, and go to state 94
    '('       shift, and go to state 95
    ')'       shift, and go to state 102
    '.'       shift, and go to state 96
    STRUCTOP  shift, and go to state 97

    $default  reduce using rule 48 (binary)


State 76

   34 stmt: IF '(' • expr ')' stmt
   35     | IF '(' • expr ')' stmt ELSE stmt

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    SYM_NULL       shift, and go to state 52
    CHAR_CONST     shift, and go to state 53
    STRING         shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    expr    go to state 103
    binary  go to state 62
    unary   go to state 63


State 77

   29 stmt: RETURN expr • ';'

    ';'  shift, and go to state 104


State 78

   36 stmt: WHILE '(' • expr ')' stmt

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    SYM_NULL       shift, and go to state 52
    CHAR_CONST     shift, and go to state 53
    STRING         shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    expr    go to state 105
    binary  go to state 62
    unary   go to state 63


State 79

   37 stmt: FOR '(' • expr_e ';' expr_e ';' expr_e ')' stmt

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    SYM_NULL       shift, and go to state 52
    CHAR_CONST     shift, and go to state 53
    STRING         shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    $default  reduce using rule 39 (expr_e)

    expr_e  go to state 106
    expr    go to state 107
    binary  go to state 62
    unary   go to state 63


State 80

   30 stmt: BREAK ';' •

    $default  reduce using rule 30 (stmt)


State 81

   31 stmt: CONTINUE ';' •

    $default  reduce using rule 31 (stmt)


State 82

   28 stmt: expr ';' •

    $default  reduce using rule 28 (stmt)


State 83

   50 binary: binary LOGICAL_OR • binary

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    SYM_NULL       shift, and go to state 52
    CHAR_CONST     shift, and go to state 53
    STRING         shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    binary  go to state 108
    unary   go to state 109


State 84

   49 binary: binary LOGICAL_AND • binary

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    SYM_NULL       shift, and go to state 52
    CHAR_CONST     shift, and go to state 53
    STRING         shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    binary  go to state 110
    unary   go to state 109


State 85

   43 binary: binary EQUOP • binary

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    SYM_NULL       shift, and go to state 52
    CHAR_CONST     shift, and go to state 53
    STRING         shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    binary  go to state 111
    unary   go to state 109


State 86

   42 binary: binary RELOP • binary

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    SYM_NULL       shift, and go to state 52
    CHAR_CONST     shift, and go to state 53
    STRING         shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    binary  go to state 112
    unary   go to state 109


State 87

   44 binary: binary '+' • binary

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    SYM_NULL       shift, and go to state 52
    CHAR_CONST     shift, and go to state 53
    STRING         shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    binary  go to state 113
    unary   go to state 109


State 88

   45 binary: binary '-' • binary

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    SYM_NULL       shift, and go to state 52
    CHAR_CONST     shift, and go to state 53
    STRING         shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    binary  go to state 114
    unary   go to state 109


State 89

   46 binary: binary '*' • binary

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    SYM_NULL       shift, and go to state 52
    CHAR_CONST     shift, and go to state 53
    STRING         shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    binary  go to state 115
    unary   go to state 109


State 90

   47 binary: binary '/' • binary

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    SYM_NULL       shift, and go to state 52
    CHAR_CONST     shift, and go to state 53
    STRING         shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    binary  go to state 116
    unary   go to state 109


State 91

   40 expr: unary '=' • expr

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    SYM_NULL       shift, and go to state 52
    CHAR_CONST     shift, and go to state 53
    STRING         shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    expr    go to state 117
    binary  go to state 62
    unary   go to state 63


State 92

   59 unary: unary INCOP •

    $default  reduce using rule 59 (unary)


State 93

   60 unary: unary DECOP •

    $default  reduce using rule 60 (unary)


State 94

   65 unary: unary '[' • expr ']'

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    SYM_NULL       shift, and go to state 52
    CHAR_CONST     shift, and go to state 53
    STRING         shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    expr    go to state 118
    binary  go to state 62
    unary   go to state 63


State 95

   68 unary: unary '(' • args ')'
   69      | unary '(' • ')'

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    ')'            shift, and go to state 119
    SYM_NULL       shift, and go to state 52
    CHAR_CONST     shift, and go to state 53
    STRING         shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    expr    go to state 120
    binary  go to state 62
    unary   go to state 63
    args    go to state 121


State 96

   66 unary: unary '.' • ID

    ID  shift, and go to state 122


State 97

   67 unary: unary STRUCTOP • ID

    ID  shift, and go to state 123


State 98

   23 def: type_specifier pointers ID '[' • INTEGER_CONST ']' ';'

    INTEGER_CONST  shift, and go to state 124


State 99

   22 def: type_specifier pointers ID ';' •

    $default  reduce using rule 22 (def)


State 100

   19 param_decl: type_specifier pointers ID '[' • INTEGER_CONST ']'

    INTEGER_CONST  shift, and go to state 125


State 101

   51 unary: '(' expr ')' •

    $default  reduce using rule 51 (unary)


State 102

   52 unary: '(' unary ')' •

    $default  reduce using rule 52 (unary)


State 103

   34 stmt: IF '(' expr • ')' stmt
   35     | IF '(' expr • ')' stmt ELSE stmt

    ')'  shift, and go to state 126


State 104

   29 stmt: RETURN expr ';' •

    $default  reduce using rule 29 (stmt)


State 105

   36 stmt: WHILE '(' expr • ')' stmt

    ')'  shift, and go to state 127


State 106

   37 stmt: FOR '(' expr_e • ';' expr_e ';' expr_e ')' stmt

    ';'  shift, and go to state 128


State 107

   38 expr_e: expr •

    $default  reduce using rule 38 (expr_e)


State 108

   42 binary: binary • RELOP binary
   43       | binary • EQUOP binary
   44       | binary • '+' binary
   45       | binary • '-' binary
   46       | binary • '*' binary
   47       | binary • '/' binary
   49       | binary • LOGICAL_AND binary
   50       | binary • LOGICAL_OR binary
   50       | binary LOGICAL_OR binary •

    LOGICAL_AND  shift, and go to state 84
    EQUOP        shift, and go to state 85
    RELOP        shift, and go to state 86
    '+'          shift, and go to state 87
    '-'          shift, and go to state 88
    '*'          shift, and go to state 89
    '/'          shift, and go to state 90

    $default  reduce using rule 50 (binary)


State 109

   48 binary: unary •
   59 unary: unary • INCOP
   60      | unary • DECOP
   65      | unary • '[' expr ']'
   66      | unary • '.' ID
   67      | unary • STRUCTOP ID
   68      | unary • '(' args ')'
   69      | unary • '(' ')'

    INCOP     shift, and go to state 92
    DECOP     shift, and go to state 93
    '['       shift, and go to state 94
    '('       shift, and go to state 95
    '.'       shift, and go to state 96
    STRUCTOP  shift, and go to state 97

    $default  reduce using rule 48 (binary)


State 110

   42 binary: binary • RELOP binary
   43       | binary • EQUOP binary
   44       | binary • '+' binary
   45       | binary • '-' binary
   46       | binary • '*' binary
   47       | binary • '/' binary
   49       | binary • LOGICAL_AND binary
   49       | binary LOGICAL_AND binary •
   50       | binary • LOGICAL_OR binary

    EQUOP  shift, and go to state 85
    RELOP  shift, and go to state 86
    '+'    shift, and go to state 87
    '-'    shift, and go to state 88
    '*'    shift, and go to state 89
    '/'    shift, and go to state 90

    $default  reduce using rule 49 (binary)


State 111

   42 binary: binary • RELOP binary
   43       | binary • EQUOP binary
   43       | binary EQUOP binary •
   44       | binary • '+' binary
   45       | binary • '-' binary
   46       | binary • '*' binary
   47       | binary • '/' binary
   49       | binary • LOGICAL_AND binary
   50       | binary • LOGICAL_OR binary

    RELOP  shift, and go to state 86
    '+'    shift, and go to state 87
    '-'    shift, and go to state 88
    '*'    shift, and go to state 89
    '/'    shift, and go to state 90

    $default  reduce using rule 43 (binary)


State 112

   42 binary: binary • RELOP binary
   42       | binary RELOP binary •
   43       | binary • EQUOP binary
   44       | binary • '+' binary
   45       | binary • '-' binary
   46       | binary • '*' binary
   47       | binary • '/' binary
   49       | binary • LOGICAL_AND binary
   50       | binary • LOGICAL_OR binary

    '+'  shift, and go to state 87
    '-'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90

    $default  reduce using rule 42 (binary)


State 113

   42 binary: binary • RELOP binary
   43       | binary • EQUOP binary
   44       | binary • '+' binary
   44       | binary '+' binary •
   45       | binary • '-' binary
   46       | binary • '*' binary
   47       | binary • '/' binary
   49       | binary • LOGICAL_AND binary
   50       | binary • LOGICAL_OR binary

    '*'  shift, and go to state 89
    '/'  shift, and go to state 90

    $default  reduce using rule 44 (binary)


State 114

   42 binary: binary • RELOP binary
   43       | binary • EQUOP binary
   44       | binary • '+' binary
   45       | binary • '-' binary
   45       | binary '-' binary •
   46       | binary • '*' binary
   47       | binary • '/' binary
   49       | binary • LOGICAL_AND binary
   50       | binary • LOGICAL_OR binary

    '*'  shift, and go to state 89
    '/'  shift, and go to state 90

    $default  reduce using rule 45 (binary)


State 115

   42 binary: binary • RELOP binary
   43       | binary • EQUOP binary
   44       | binary • '+' binary
   45       | binary • '-' binary
   46       | binary • '*' binary
   46       | binary '*' binary •
   47       | binary • '/' binary
   49       | binary • LOGICAL_AND binary
   50       | binary • LOGICAL_OR binary

    $default  reduce using rule 46 (binary)


State 116

   42 binary: binary • RELOP binary
   43       | binary • EQUOP binary
   44       | binary • '+' binary
   45       | binary • '-' binary
   46       | binary • '*' binary
   47       | binary • '/' binary
   47       | binary '/' binary •
   49       | binary • LOGICAL_AND binary
   50       | binary • LOGICAL_OR binary

    $default  reduce using rule 47 (binary)


State 117

   40 expr: unary '=' expr •

    $default  reduce using rule 40 (expr)


State 118

   65 unary: unary '[' expr • ']'

    ']'  shift, and go to state 129


State 119

   69 unary: unary '(' ')' •

    $default  reduce using rule 69 (unary)


State 120

   71 args: expr •

    $default  reduce using rule 71 (args)


State 121

   68 unary: unary '(' args • ')'
   72 args: args • ',' expr

    ','  shift, and go to state 130
    ')'  shift, and go to state 131


State 122

   66 unary: unary '.' ID •

    $default  reduce using rule 66 (unary)


State 123

   67 unary: unary STRUCTOP ID •

    $default  reduce using rule 67 (unary)


State 124

   23 def: type_specifier pointers ID '[' INTEGER_CONST • ']' ';'

    ']'  shift, and go to state 132


State 125

   19 param_decl: type_specifier pointers ID '[' INTEGER_CONST • ']'

    ']'  shift, and go to state 133


State 126

   34 stmt: IF '(' expr ')' • stmt
   35     | IF '(' expr ')' • stmt ELSE stmt

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    IF             shift, and go to state 46
    RETURN         shift, and go to state 47
    WHILE          shift, and go to state 48
    FOR            shift, and go to state 49
    BREAK          shift, and go to state 50
    CONTINUE       shift, and go to state 51
    SYM_NULL       shift, and go to state 52
    CHAR_CONST     shift, and go to state 53
    STRING         shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56
    ';'            shift, and go to state 57
    '{'            shift, and go to state 14

    compound_stmt  go to state 59
    stmt           go to state 134
    expr           go to state 61
    binary         go to state 62
    unary          go to state 63


State 127

   36 stmt: WHILE '(' expr ')' • stmt

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    IF             shift, and go to state 46
    RETURN         shift, and go to state 47
    WHILE          shift, and go to state 48
    FOR            shift, and go to state 49
    BREAK          shift, and go to state 50
    CONTINUE       shift, and go to state 51
    SYM_NULL       shift, and go to state 52
    CHAR_CONST     shift, and go to state 53
    STRING         shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56
    ';'            shift, and go to state 57
    '{'            shift, and go to state 14

    compound_stmt  go to state 59
    stmt           go to state 135
    expr           go to state 61
    binary         go to state 62
    unary          go to state 63


State 128

   37 stmt: FOR '(' expr_e ';' • expr_e ';' expr_e ')' stmt

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    SYM_NULL       shift, and go to state 52
    CHAR_CONST     shift, and go to state 53
    STRING         shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    $default  reduce using rule 39 (expr_e)

    expr_e  go to state 136
    expr    go to state 107
    binary  go to state 62
    unary   go to state 63


State 129

   65 unary: unary '[' expr ']' •

    $default  reduce using rule 65 (unary)


State 130

   72 args: args ',' • expr

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    SYM_NULL       shift, and go to state 52
    CHAR_CONST     shift, and go to state 53
    STRING         shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    expr    go to state 137
    binary  go to state 62
    unary   go to state 63


State 131

   68 unary: unary '(' args ')' •

    $default  reduce using rule 68 (unary)


State 132

   23 def: type_specifier pointers ID '[' INTEGER_CONST ']' • ';'

    ';'  shift, and go to state 138


State 133

   19 param_decl: type_specifier pointers ID '[' INTEGER_CONST ']' •

    $default  reduce using rule 19 (param_decl)


State 134

   34 stmt: IF '(' expr ')' stmt •
   35     | IF '(' expr ')' stmt • ELSE stmt

    ELSE  shift, and go to state 139

    $default  reduce using rule 34 (stmt)


State 135

   36 stmt: WHILE '(' expr ')' stmt •

    $default  reduce using rule 36 (stmt)


State 136

   37 stmt: FOR '(' expr_e ';' expr_e • ';' expr_e ')' stmt

    ';'  shift, and go to state 140


State 137

   72 args: args ',' expr •

    $default  reduce using rule 72 (args)


State 138

   23 def: type_specifier pointers ID '[' INTEGER_CONST ']' ';' •

    $default  reduce using rule 23 (def)


State 139

   35 stmt: IF '(' expr ')' stmt ELSE • stmt

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    IF             shift, and go to state 46
    RETURN         shift, and go to state 47
    WHILE          shift, and go to state 48
    FOR            shift, and go to state 49
    BREAK          shift, and go to state 50
    CONTINUE       shift, and go to state 51
    SYM_NULL       shift, and go to state 52
    CHAR_CONST     shift, and go to state 53
    STRING         shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56
    ';'            shift, and go to state 57
    '{'            shift, and go to state 14

    compound_stmt  go to state 59
    stmt           go to state 141
    expr           go to state 61
    binary         go to state 62
    unary          go to state 63


State 140

   37 stmt: FOR '(' expr_e ';' expr_e ';' • expr_e ')' stmt

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    SYM_NULL       shift, and go to state 52
    CHAR_CONST     shift, and go to state 53
    STRING         shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    $default  reduce using rule 39 (expr_e)

    expr_e  go to state 142
    expr    go to state 107
    binary  go to state 62
    unary   go to state 63


State 141

   35 stmt: IF '(' expr ')' stmt ELSE stmt •

    $default  reduce using rule 35 (stmt)


State 142

   37 stmt: FOR '(' expr_e ';' expr_e ';' expr_e • ')' stmt

    ')'  shift, and go to state 143


State 143

   37 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' • stmt

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    IF             shift, and go to state 46
    RETURN         shift, and go to state 47
    WHILE          shift, and go to state 48
    FOR            shift, and go to state 49
    BREAK          shift, and go to state 50
    CONTINUE       shift, and go to state 51
    SYM_NULL       shift, and go to state 52
    CHAR_CONST     shift, and go to state 53
    STRING         shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56
    ';'            shift, and go to state 57
    '{'            shift, and go to state 14

    compound_stmt  go to state 59
    stmt           go to state 144
    expr           go to state 61
    binary         go to state 62
    unary          go to state 63


State 144

   37 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt •

    $default  reduce using rule 37 (stmt)
