Grammar

    0 $accept: program $end

    1 program: ext_def_list

    2 ext_def_list: ext_def_list ext_def
    3             | ε

    4 ext_def: type_specifier pointers ID ';'
    5        | type_specifier pointers ID '[' INTEGER_CONST ']' ';'
    6        | STRUCT ID '{' def_list '}' ';'
    7        | func_decl compound_stmt

    8 type_specifier: TYPE
    9               | struct_specifier

   10 struct_specifier: STRUCT ID '{' def_list '}'
   11                 | STRUCT ID

   12 func_decl: type_specifier pointers ID '(' ')'
   13          | type_specifier pointers ID '(' param_list ')'

   14 pointers: '*'
   15         | ε

   16 param_list: param_decl
   17           | param_list ',' param_decl

   18 param_decl: type_specifier pointers ID
   19           | type_specifier pointers ID '[' INTEGER_CONST ']'

   20 def_list: def_list def
   21         | ε

   22 def: type_specifier pointers ID ';'
   23    | type_specifier pointers ID '[' INTEGER_CONST ']' ';'

   24 compound_stmt: '{' def_list stmt_list '}'

   25 stmt_list: stmt_list stmt
   26          | ε

   27 stmt: expr ';'
   28     | compound_stmt
   29     | RETURN expr ';'
   30     | ';'
   31     | IF '(' expr ')' stmt
   32     | IF '(' expr ')' stmt ELSE stmt
   33     | WHILE '(' expr ')' stmt
   34     | FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt
   35     | BREAK ';'
   36     | CONTINUE ';'

   37 expr_e: expr
   38       | ε

   39 expr: unary '=' expr
   40     | binary

   41 binary: binary RELOP binary
   42       | binary EQUOP binary
   43       | binary '+' binary
   44       | binary '-' binary
   45       | binary '*' binary
   46       | binary '/' binary
   47       | binary '%' binary
   48       | unary
   49       | binary LOGICAL_AND binary
   50       | binary LOGICAL_OR binary

   51 unary: '(' expr ')'
   52      | INTEGER_CONST
   53      | CHAR_CONST
   54      | STRING
   55      | ID
   56      | '-' unary
   57      | '!' unary
   58      | unary INCOP
   59      | unary DECOP
   60      | INCOP unary
   61      | DECOP unary
   62      | '&' unary
   63      | '*' unary
   64      | unary '[' expr ']'
   65      | unary '.' ID
   66      | unary STRUCTOP ID
   67      | unary '(' args ')'
   68      | unary '(' ')'
   69      | SYM_NULL

   70 args: expr
   71     | args ',' expr


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 57
    '%' (37) 47
    '&' (38) 62
    '(' (40) 12 13 31 32 33 34 51 67 68
    ')' (41) 12 13 31 32 33 34 51 67 68
    '*' (42) 14 45 63
    '+' (43) 43
    ',' (44) 17 71
    '-' (45) 44 56
    '.' (46) 65
    '/' (47) 46
    ';' (59) 4 5 6 22 23 27 29 30 34 35 36
    '=' (61) 39
    '[' (91) 5 19 23 64
    ']' (93) 5 19 23 64
    '{' (123) 6 10 24
    '}' (125) 6 10 24
    error (256)
    DEREF (258)
    LOWER_THAN_ELSE (259)
    UMINUS (260)
    TYPE (261) 8
    STRUCT (262) 6 10 11
    SYM_NULL (263) 69
    RETURN (264) 29
    INTEGER_CONST (265) 5 19 23 52
    CHAR_CONST (266) 53
    STRING (267) 54
    IF (268) 31 32
    ELSE (269) 32
    WHILE (270) 33
    FOR (271) 34
    BREAK (272) 35
    CONTINUE (273) 36
    LOGICAL_OR (274) 50
    LOGICAL_AND (275) 49
    RELOP (276) 41
    EQUOP (277) 42
    INCOP (278) 58 60
    DECOP (279) 59 61
    STRUCTOP (280) 66
    ID (281) 4 5 6 10 11 12 13 18 19 22 23 55 65 66


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    program (45)
        on left: 1
        on right: 0
    ext_def_list (46)
        on left: 2 3
        on right: 1 2
    ext_def (47)
        on left: 4 5 6 7
        on right: 2
    type_specifier (48)
        on left: 8 9
        on right: 4 5 12 13 18 19 22 23
    struct_specifier (49)
        on left: 10 11
        on right: 9
    func_decl (50)
        on left: 12 13
        on right: 7
    pointers (51)
        on left: 14 15
        on right: 4 5 12 13 18 19 22 23
    param_list (52)
        on left: 16 17
        on right: 13 17
    param_decl (53)
        on left: 18 19
        on right: 16 17
    def_list (54)
        on left: 20 21
        on right: 6 10 20 24
    def (55)
        on left: 22 23
        on right: 20
    compound_stmt (56)
        on left: 24
        on right: 7 28
    stmt_list (57)
        on left: 25 26
        on right: 24 25
    stmt (58)
        on left: 27 28 29 30 31 32 33 34 35 36
        on right: 25 31 32 33 34
    expr_e (59)
        on left: 37 38
        on right: 34
    expr (60)
        on left: 39 40
        on right: 27 29 31 32 33 37 39 51 64 70 71
    binary (61)
        on left: 41 42 43 44 45 46 47 48 49 50
        on right: 40 41 42 43 44 45 46 47 49 50
    unary (62)
        on left: 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69
        on right: 39 48 56 57 58 59 60 61 62 63 64 65 66 67 68
    args (63)
        on left: 70 71
        on right: 67 71


State 0

    0 $accept: • program $end

    $default  reduce using rule 3 (ext_def_list)

    program       go to state 1
    ext_def_list  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: ext_def_list •
    2 ext_def_list: ext_def_list • ext_def

    TYPE    shift, and go to state 4
    STRUCT  shift, and go to state 5

    $default  reduce using rule 1 (program)

    ext_def           go to state 6
    type_specifier    go to state 7
    struct_specifier  go to state 8
    func_decl         go to state 9


State 3

    0 $accept: program $end •

    $default  accept


State 4

    8 type_specifier: TYPE •

    $default  reduce using rule 8 (type_specifier)


State 5

    6 ext_def: STRUCT • ID '{' def_list '}' ';'
   10 struct_specifier: STRUCT • ID '{' def_list '}'
   11                 | STRUCT • ID

    ID  shift, and go to state 10


State 6

    2 ext_def_list: ext_def_list ext_def •

    $default  reduce using rule 2 (ext_def_list)


State 7

    4 ext_def: type_specifier • pointers ID ';'
    5        | type_specifier • pointers ID '[' INTEGER_CONST ']' ';'
   12 func_decl: type_specifier • pointers ID '(' ')'
   13          | type_specifier • pointers ID '(' param_list ')'

    '*'  shift, and go to state 11

    $default  reduce using rule 15 (pointers)

    pointers  go to state 12


State 8

    9 type_specifier: struct_specifier •

    $default  reduce using rule 9 (type_specifier)


State 9

    7 ext_def: func_decl • compound_stmt

    '{'  shift, and go to state 13

    compound_stmt  go to state 14


State 10

    6 ext_def: STRUCT ID • '{' def_list '}' ';'
   10 struct_specifier: STRUCT ID • '{' def_list '}'
   11                 | STRUCT ID •

    '{'  shift, and go to state 15

    $default  reduce using rule 11 (struct_specifier)


State 11

   14 pointers: '*' •

    $default  reduce using rule 14 (pointers)


State 12

    4 ext_def: type_specifier pointers • ID ';'
    5        | type_specifier pointers • ID '[' INTEGER_CONST ']' ';'
   12 func_decl: type_specifier pointers • ID '(' ')'
   13          | type_specifier pointers • ID '(' param_list ')'

    ID  shift, and go to state 16


State 13

   24 compound_stmt: '{' • def_list stmt_list '}'

    $default  reduce using rule 21 (def_list)

    def_list  go to state 17


State 14

    7 ext_def: func_decl compound_stmt •

    $default  reduce using rule 7 (ext_def)


State 15

    6 ext_def: STRUCT ID '{' • def_list '}' ';'
   10 struct_specifier: STRUCT ID '{' • def_list '}'

    $default  reduce using rule 21 (def_list)

    def_list  go to state 18


State 16

    4 ext_def: type_specifier pointers ID • ';'
    5        | type_specifier pointers ID • '[' INTEGER_CONST ']' ';'
   12 func_decl: type_specifier pointers ID • '(' ')'
   13          | type_specifier pointers ID • '(' param_list ')'

    '['  shift, and go to state 19
    '('  shift, and go to state 20
    ';'  shift, and go to state 21


State 17

   20 def_list: def_list • def
   24 compound_stmt: '{' def_list • stmt_list '}'

    TYPE    shift, and go to state 4
    STRUCT  shift, and go to state 22

    $default  reduce using rule 26 (stmt_list)

    type_specifier    go to state 23
    struct_specifier  go to state 8
    def               go to state 24
    stmt_list         go to state 25


State 18

    6 ext_def: STRUCT ID '{' def_list • '}' ';'
   10 struct_specifier: STRUCT ID '{' def_list • '}'
   20 def_list: def_list • def

    TYPE    shift, and go to state 4
    STRUCT  shift, and go to state 22
    '}'     shift, and go to state 26

    type_specifier    go to state 23
    struct_specifier  go to state 8
    def               go to state 24


State 19

    5 ext_def: type_specifier pointers ID '[' • INTEGER_CONST ']' ';'

    INTEGER_CONST  shift, and go to state 27


State 20

   12 func_decl: type_specifier pointers ID '(' • ')'
   13          | type_specifier pointers ID '(' • param_list ')'

    TYPE    shift, and go to state 4
    STRUCT  shift, and go to state 22
    ')'     shift, and go to state 28

    type_specifier    go to state 29
    struct_specifier  go to state 8
    param_list        go to state 30
    param_decl        go to state 31


State 21

    4 ext_def: type_specifier pointers ID ';' •

    $default  reduce using rule 4 (ext_def)


State 22

   10 struct_specifier: STRUCT • ID '{' def_list '}'
   11                 | STRUCT • ID

    ID  shift, and go to state 32


State 23

   22 def: type_specifier • pointers ID ';'
   23    | type_specifier • pointers ID '[' INTEGER_CONST ']' ';'

    '*'  shift, and go to state 11

    $default  reduce using rule 15 (pointers)

    pointers  go to state 33


State 24

   20 def_list: def_list def •

    $default  reduce using rule 20 (def_list)


State 25

   24 compound_stmt: '{' def_list stmt_list • '}'
   25 stmt_list: stmt_list • stmt

    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '('            shift, and go to state 36
    '!'            shift, and go to state 37
    '&'            shift, and go to state 38
    SYM_NULL       shift, and go to state 39
    RETURN         shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    STRING         shift, and go to state 43
    IF             shift, and go to state 44
    WHILE          shift, and go to state 45
    FOR            shift, and go to state 46
    BREAK          shift, and go to state 47
    CONTINUE       shift, and go to state 48
    INCOP          shift, and go to state 49
    DECOP          shift, and go to state 50
    ID             shift, and go to state 51
    ';'            shift, and go to state 52
    '{'            shift, and go to state 13
    '}'            shift, and go to state 53

    compound_stmt  go to state 54
    stmt           go to state 55
    expr           go to state 56
    binary         go to state 57
    unary          go to state 58


State 26

    6 ext_def: STRUCT ID '{' def_list '}' • ';'
   10 struct_specifier: STRUCT ID '{' def_list '}' •

    ';'  shift, and go to state 59

    $default  reduce using rule 10 (struct_specifier)


State 27

    5 ext_def: type_specifier pointers ID '[' INTEGER_CONST • ']' ';'

    ']'  shift, and go to state 60


State 28

   12 func_decl: type_specifier pointers ID '(' ')' •

    $default  reduce using rule 12 (func_decl)


State 29

   18 param_decl: type_specifier • pointers ID
   19           | type_specifier • pointers ID '[' INTEGER_CONST ']'

    '*'  shift, and go to state 11

    $default  reduce using rule 15 (pointers)

    pointers  go to state 61


State 30

   13 func_decl: type_specifier pointers ID '(' param_list • ')'
   17 param_list: param_list • ',' param_decl

    ','  shift, and go to state 62
    ')'  shift, and go to state 63


State 31

   16 param_list: param_decl •

    $default  reduce using rule 16 (param_list)


State 32

   10 struct_specifier: STRUCT ID • '{' def_list '}'
   11                 | STRUCT ID •

    '{'  shift, and go to state 64

    $default  reduce using rule 11 (struct_specifier)


State 33

   22 def: type_specifier pointers • ID ';'
   23    | type_specifier pointers • ID '[' INTEGER_CONST ']' ';'

    ID  shift, and go to state 65


State 34

   56 unary: '-' • unary

    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '('            shift, and go to state 36
    '!'            shift, and go to state 37
    '&'            shift, and go to state 38
    SYM_NULL       shift, and go to state 39
    INTEGER_CONST  shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    STRING         shift, and go to state 43
    INCOP          shift, and go to state 49
    DECOP          shift, and go to state 50
    ID             shift, and go to state 51

    unary  go to state 66


State 35

   63 unary: '*' • unary

    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '('            shift, and go to state 36
    '!'            shift, and go to state 37
    '&'            shift, and go to state 38
    SYM_NULL       shift, and go to state 39
    INTEGER_CONST  shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    STRING         shift, and go to state 43
    INCOP          shift, and go to state 49
    DECOP          shift, and go to state 50
    ID             shift, and go to state 51

    unary  go to state 67


State 36

   51 unary: '(' • expr ')'

    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '('            shift, and go to state 36
    '!'            shift, and go to state 37
    '&'            shift, and go to state 38
    SYM_NULL       shift, and go to state 39
    INTEGER_CONST  shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    STRING         shift, and go to state 43
    INCOP          shift, and go to state 49
    DECOP          shift, and go to state 50
    ID             shift, and go to state 51

    expr    go to state 68
    binary  go to state 57
    unary   go to state 58


State 37

   57 unary: '!' • unary

    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '('            shift, and go to state 36
    '!'            shift, and go to state 37
    '&'            shift, and go to state 38
    SYM_NULL       shift, and go to state 39
    INTEGER_CONST  shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    STRING         shift, and go to state 43
    INCOP          shift, and go to state 49
    DECOP          shift, and go to state 50
    ID             shift, and go to state 51

    unary  go to state 69


State 38

   62 unary: '&' • unary

    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '('            shift, and go to state 36
    '!'            shift, and go to state 37
    '&'            shift, and go to state 38
    SYM_NULL       shift, and go to state 39
    INTEGER_CONST  shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    STRING         shift, and go to state 43
    INCOP          shift, and go to state 49
    DECOP          shift, and go to state 50
    ID             shift, and go to state 51

    unary  go to state 70


State 39

   69 unary: SYM_NULL •

    $default  reduce using rule 69 (unary)


State 40

   29 stmt: RETURN • expr ';'

    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '('            shift, and go to state 36
    '!'            shift, and go to state 37
    '&'            shift, and go to state 38
    SYM_NULL       shift, and go to state 39
    INTEGER_CONST  shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    STRING         shift, and go to state 43
    INCOP          shift, and go to state 49
    DECOP          shift, and go to state 50
    ID             shift, and go to state 51

    expr    go to state 71
    binary  go to state 57
    unary   go to state 58


State 41

   52 unary: INTEGER_CONST •

    $default  reduce using rule 52 (unary)


State 42

   53 unary: CHAR_CONST •

    $default  reduce using rule 53 (unary)


State 43

   54 unary: STRING •

    $default  reduce using rule 54 (unary)


State 44

   31 stmt: IF • '(' expr ')' stmt
   32     | IF • '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 72


State 45

   33 stmt: WHILE • '(' expr ')' stmt

    '('  shift, and go to state 73


State 46

   34 stmt: FOR • '(' expr_e ';' expr_e ';' expr_e ')' stmt

    '('  shift, and go to state 74


State 47

   35 stmt: BREAK • ';'

    ';'  shift, and go to state 75


State 48

   36 stmt: CONTINUE • ';'

    ';'  shift, and go to state 76


State 49

   60 unary: INCOP • unary

    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '('            shift, and go to state 36
    '!'            shift, and go to state 37
    '&'            shift, and go to state 38
    SYM_NULL       shift, and go to state 39
    INTEGER_CONST  shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    STRING         shift, and go to state 43
    INCOP          shift, and go to state 49
    DECOP          shift, and go to state 50
    ID             shift, and go to state 51

    unary  go to state 77


State 50

   61 unary: DECOP • unary

    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '('            shift, and go to state 36
    '!'            shift, and go to state 37
    '&'            shift, and go to state 38
    SYM_NULL       shift, and go to state 39
    INTEGER_CONST  shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    STRING         shift, and go to state 43
    INCOP          shift, and go to state 49
    DECOP          shift, and go to state 50
    ID             shift, and go to state 51

    unary  go to state 78


State 51

   55 unary: ID •

    $default  reduce using rule 55 (unary)


State 52

   30 stmt: ';' •

    $default  reduce using rule 30 (stmt)


State 53

   24 compound_stmt: '{' def_list stmt_list '}' •

    $default  reduce using rule 24 (compound_stmt)


State 54

   28 stmt: compound_stmt •

    $default  reduce using rule 28 (stmt)


State 55

   25 stmt_list: stmt_list stmt •

    $default  reduce using rule 25 (stmt_list)


State 56

   27 stmt: expr • ';'

    ';'  shift, and go to state 79


State 57

   40 expr: binary •
   41 binary: binary • RELOP binary
   42       | binary • EQUOP binary
   43       | binary • '+' binary
   44       | binary • '-' binary
   45       | binary • '*' binary
   46       | binary • '/' binary
   47       | binary • '%' binary
   49       | binary • LOGICAL_AND binary
   50       | binary • LOGICAL_OR binary

    '+'          shift, and go to state 80
    '-'          shift, and go to state 81
    '*'          shift, and go to state 82
    '/'          shift, and go to state 83
    '%'          shift, and go to state 84
    LOGICAL_OR   shift, and go to state 85
    LOGICAL_AND  shift, and go to state 86
    RELOP        shift, and go to state 87
    EQUOP        shift, and go to state 88

    $default  reduce using rule 40 (expr)


State 58

   39 expr: unary • '=' expr
   48 binary: unary •
   58 unary: unary • INCOP
   59      | unary • DECOP
   64      | unary • '[' expr ']'
   65      | unary • '.' ID
   66      | unary • STRUCTOP ID
   67      | unary • '(' args ')'
   68      | unary • '(' ')'

    '='       shift, and go to state 89
    '['       shift, and go to state 90
    '.'       shift, and go to state 91
    '('       shift, and go to state 92
    INCOP     shift, and go to state 93
    DECOP     shift, and go to state 94
    STRUCTOP  shift, and go to state 95

    $default  reduce using rule 48 (binary)


State 59

    6 ext_def: STRUCT ID '{' def_list '}' ';' •

    $default  reduce using rule 6 (ext_def)


State 60

    5 ext_def: type_specifier pointers ID '[' INTEGER_CONST ']' • ';'

    ';'  shift, and go to state 96


State 61

   18 param_decl: type_specifier pointers • ID
   19           | type_specifier pointers • ID '[' INTEGER_CONST ']'

    ID  shift, and go to state 97


State 62

   17 param_list: param_list ',' • param_decl

    TYPE    shift, and go to state 4
    STRUCT  shift, and go to state 22

    type_specifier    go to state 29
    struct_specifier  go to state 8
    param_decl        go to state 98


State 63

   13 func_decl: type_specifier pointers ID '(' param_list ')' •

    $default  reduce using rule 13 (func_decl)


State 64

   10 struct_specifier: STRUCT ID '{' • def_list '}'

    $default  reduce using rule 21 (def_list)

    def_list  go to state 99


State 65

   22 def: type_specifier pointers ID • ';'
   23    | type_specifier pointers ID • '[' INTEGER_CONST ']' ';'

    '['  shift, and go to state 100
    ';'  shift, and go to state 101


State 66

   56 unary: '-' unary •
   58      | unary • INCOP
   59      | unary • DECOP
   64      | unary • '[' expr ']'
   65      | unary • '.' ID
   66      | unary • STRUCTOP ID
   67      | unary • '(' args ')'
   68      | unary • '(' ')'

    $default  reduce using rule 56 (unary)


State 67

   58 unary: unary • INCOP
   59      | unary • DECOP
   63      | '*' unary •
   64      | unary • '[' expr ']'
   65      | unary • '.' ID
   66      | unary • STRUCTOP ID
   67      | unary • '(' args ')'
   68      | unary • '(' ')'

    $default  reduce using rule 63 (unary)


State 68

   51 unary: '(' expr • ')'

    ')'  shift, and go to state 102


State 69

   57 unary: '!' unary •
   58      | unary • INCOP
   59      | unary • DECOP
   64      | unary • '[' expr ']'
   65      | unary • '.' ID
   66      | unary • STRUCTOP ID
   67      | unary • '(' args ')'
   68      | unary • '(' ')'

    $default  reduce using rule 57 (unary)


State 70

   58 unary: unary • INCOP
   59      | unary • DECOP
   62      | '&' unary •
   64      | unary • '[' expr ']'
   65      | unary • '.' ID
   66      | unary • STRUCTOP ID
   67      | unary • '(' args ')'
   68      | unary • '(' ')'

    $default  reduce using rule 62 (unary)


State 71

   29 stmt: RETURN expr • ';'

    ';'  shift, and go to state 103


State 72

   31 stmt: IF '(' • expr ')' stmt
   32     | IF '(' • expr ')' stmt ELSE stmt

    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '('            shift, and go to state 36
    '!'            shift, and go to state 37
    '&'            shift, and go to state 38
    SYM_NULL       shift, and go to state 39
    INTEGER_CONST  shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    STRING         shift, and go to state 43
    INCOP          shift, and go to state 49
    DECOP          shift, and go to state 50
    ID             shift, and go to state 51

    expr    go to state 104
    binary  go to state 57
    unary   go to state 58


State 73

   33 stmt: WHILE '(' • expr ')' stmt

    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '('            shift, and go to state 36
    '!'            shift, and go to state 37
    '&'            shift, and go to state 38
    SYM_NULL       shift, and go to state 39
    INTEGER_CONST  shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    STRING         shift, and go to state 43
    INCOP          shift, and go to state 49
    DECOP          shift, and go to state 50
    ID             shift, and go to state 51

    expr    go to state 105
    binary  go to state 57
    unary   go to state 58


State 74

   34 stmt: FOR '(' • expr_e ';' expr_e ';' expr_e ')' stmt

    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '('            shift, and go to state 36
    '!'            shift, and go to state 37
    '&'            shift, and go to state 38
    SYM_NULL       shift, and go to state 39
    INTEGER_CONST  shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    STRING         shift, and go to state 43
    INCOP          shift, and go to state 49
    DECOP          shift, and go to state 50
    ID             shift, and go to state 51

    $default  reduce using rule 38 (expr_e)

    expr_e  go to state 106
    expr    go to state 107
    binary  go to state 57
    unary   go to state 58


State 75

   35 stmt: BREAK ';' •

    $default  reduce using rule 35 (stmt)


State 76

   36 stmt: CONTINUE ';' •

    $default  reduce using rule 36 (stmt)


State 77

   58 unary: unary • INCOP
   59      | unary • DECOP
   60      | INCOP unary •
   64      | unary • '[' expr ']'
   65      | unary • '.' ID
   66      | unary • STRUCTOP ID
   67      | unary • '(' args ')'
   68      | unary • '(' ')'

    $default  reduce using rule 60 (unary)


State 78

   58 unary: unary • INCOP
   59      | unary • DECOP
   61      | DECOP unary •
   64      | unary • '[' expr ']'
   65      | unary • '.' ID
   66      | unary • STRUCTOP ID
   67      | unary • '(' args ')'
   68      | unary • '(' ')'

    $default  reduce using rule 61 (unary)


State 79

   27 stmt: expr ';' •

    $default  reduce using rule 27 (stmt)


State 80

   43 binary: binary '+' • binary

    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '('            shift, and go to state 36
    '!'            shift, and go to state 37
    '&'            shift, and go to state 38
    SYM_NULL       shift, and go to state 39
    INTEGER_CONST  shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    STRING         shift, and go to state 43
    INCOP          shift, and go to state 49
    DECOP          shift, and go to state 50
    ID             shift, and go to state 51

    binary  go to state 108
    unary   go to state 109


State 81

   44 binary: binary '-' • binary

    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '('            shift, and go to state 36
    '!'            shift, and go to state 37
    '&'            shift, and go to state 38
    SYM_NULL       shift, and go to state 39
    INTEGER_CONST  shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    STRING         shift, and go to state 43
    INCOP          shift, and go to state 49
    DECOP          shift, and go to state 50
    ID             shift, and go to state 51

    binary  go to state 110
    unary   go to state 109


State 82

   45 binary: binary '*' • binary

    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '('            shift, and go to state 36
    '!'            shift, and go to state 37
    '&'            shift, and go to state 38
    SYM_NULL       shift, and go to state 39
    INTEGER_CONST  shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    STRING         shift, and go to state 43
    INCOP          shift, and go to state 49
    DECOP          shift, and go to state 50
    ID             shift, and go to state 51

    binary  go to state 111
    unary   go to state 109


State 83

   46 binary: binary '/' • binary

    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '('            shift, and go to state 36
    '!'            shift, and go to state 37
    '&'            shift, and go to state 38
    SYM_NULL       shift, and go to state 39
    INTEGER_CONST  shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    STRING         shift, and go to state 43
    INCOP          shift, and go to state 49
    DECOP          shift, and go to state 50
    ID             shift, and go to state 51

    binary  go to state 112
    unary   go to state 109


State 84

   47 binary: binary '%' • binary

    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '('            shift, and go to state 36
    '!'            shift, and go to state 37
    '&'            shift, and go to state 38
    SYM_NULL       shift, and go to state 39
    INTEGER_CONST  shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    STRING         shift, and go to state 43
    INCOP          shift, and go to state 49
    DECOP          shift, and go to state 50
    ID             shift, and go to state 51

    binary  go to state 113
    unary   go to state 109


State 85

   50 binary: binary LOGICAL_OR • binary

    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '('            shift, and go to state 36
    '!'            shift, and go to state 37
    '&'            shift, and go to state 38
    SYM_NULL       shift, and go to state 39
    INTEGER_CONST  shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    STRING         shift, and go to state 43
    INCOP          shift, and go to state 49
    DECOP          shift, and go to state 50
    ID             shift, and go to state 51

    binary  go to state 114
    unary   go to state 109


State 86

   49 binary: binary LOGICAL_AND • binary

    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '('            shift, and go to state 36
    '!'            shift, and go to state 37
    '&'            shift, and go to state 38
    SYM_NULL       shift, and go to state 39
    INTEGER_CONST  shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    STRING         shift, and go to state 43
    INCOP          shift, and go to state 49
    DECOP          shift, and go to state 50
    ID             shift, and go to state 51

    binary  go to state 115
    unary   go to state 109


State 87

   41 binary: binary RELOP • binary

    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '('            shift, and go to state 36
    '!'            shift, and go to state 37
    '&'            shift, and go to state 38
    SYM_NULL       shift, and go to state 39
    INTEGER_CONST  shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    STRING         shift, and go to state 43
    INCOP          shift, and go to state 49
    DECOP          shift, and go to state 50
    ID             shift, and go to state 51

    binary  go to state 116
    unary   go to state 109


State 88

   42 binary: binary EQUOP • binary

    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '('            shift, and go to state 36
    '!'            shift, and go to state 37
    '&'            shift, and go to state 38
    SYM_NULL       shift, and go to state 39
    INTEGER_CONST  shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    STRING         shift, and go to state 43
    INCOP          shift, and go to state 49
    DECOP          shift, and go to state 50
    ID             shift, and go to state 51

    binary  go to state 117
    unary   go to state 109


State 89

   39 expr: unary '=' • expr

    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '('            shift, and go to state 36
    '!'            shift, and go to state 37
    '&'            shift, and go to state 38
    SYM_NULL       shift, and go to state 39
    INTEGER_CONST  shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    STRING         shift, and go to state 43
    INCOP          shift, and go to state 49
    DECOP          shift, and go to state 50
    ID             shift, and go to state 51

    expr    go to state 118
    binary  go to state 57
    unary   go to state 58


State 90

   64 unary: unary '[' • expr ']'

    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '('            shift, and go to state 36
    '!'            shift, and go to state 37
    '&'            shift, and go to state 38
    SYM_NULL       shift, and go to state 39
    INTEGER_CONST  shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    STRING         shift, and go to state 43
    INCOP          shift, and go to state 49
    DECOP          shift, and go to state 50
    ID             shift, and go to state 51

    expr    go to state 119
    binary  go to state 57
    unary   go to state 58


State 91

   65 unary: unary '.' • ID

    ID  shift, and go to state 120


State 92

   67 unary: unary '(' • args ')'
   68      | unary '(' • ')'

    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '('            shift, and go to state 36
    '!'            shift, and go to state 37
    '&'            shift, and go to state 38
    SYM_NULL       shift, and go to state 39
    INTEGER_CONST  shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    STRING         shift, and go to state 43
    INCOP          shift, and go to state 49
    DECOP          shift, and go to state 50
    ID             shift, and go to state 51
    ')'            shift, and go to state 121

    expr    go to state 122
    binary  go to state 57
    unary   go to state 58
    args    go to state 123


State 93

   58 unary: unary INCOP •

    $default  reduce using rule 58 (unary)


State 94

   59 unary: unary DECOP •

    $default  reduce using rule 59 (unary)


State 95

   66 unary: unary STRUCTOP • ID

    ID  shift, and go to state 124


State 96

    5 ext_def: type_specifier pointers ID '[' INTEGER_CONST ']' ';' •

    $default  reduce using rule 5 (ext_def)


State 97

   18 param_decl: type_specifier pointers ID •
   19           | type_specifier pointers ID • '[' INTEGER_CONST ']'

    '['  shift, and go to state 125

    $default  reduce using rule 18 (param_decl)


State 98

   17 param_list: param_list ',' param_decl •

    $default  reduce using rule 17 (param_list)


State 99

   10 struct_specifier: STRUCT ID '{' def_list • '}'
   20 def_list: def_list • def

    TYPE    shift, and go to state 4
    STRUCT  shift, and go to state 22
    '}'     shift, and go to state 126

    type_specifier    go to state 23
    struct_specifier  go to state 8
    def               go to state 24


State 100

   23 def: type_specifier pointers ID '[' • INTEGER_CONST ']' ';'

    INTEGER_CONST  shift, and go to state 127


State 101

   22 def: type_specifier pointers ID ';' •

    $default  reduce using rule 22 (def)


State 102

   51 unary: '(' expr ')' •

    $default  reduce using rule 51 (unary)


State 103

   29 stmt: RETURN expr ';' •

    $default  reduce using rule 29 (stmt)


State 104

   31 stmt: IF '(' expr • ')' stmt
   32     | IF '(' expr • ')' stmt ELSE stmt

    ')'  shift, and go to state 128


State 105

   33 stmt: WHILE '(' expr • ')' stmt

    ')'  shift, and go to state 129


State 106

   34 stmt: FOR '(' expr_e • ';' expr_e ';' expr_e ')' stmt

    ';'  shift, and go to state 130


State 107

   37 expr_e: expr •

    $default  reduce using rule 37 (expr_e)


State 108

   41 binary: binary • RELOP binary
   42       | binary • EQUOP binary
   43       | binary • '+' binary
   43       | binary '+' binary •
   44       | binary • '-' binary
   45       | binary • '*' binary
   46       | binary • '/' binary
   47       | binary • '%' binary
   49       | binary • LOGICAL_AND binary
   50       | binary • LOGICAL_OR binary

    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '%'  shift, and go to state 84

    $default  reduce using rule 43 (binary)


State 109

   48 binary: unary •
   58 unary: unary • INCOP
   59      | unary • DECOP
   64      | unary • '[' expr ']'
   65      | unary • '.' ID
   66      | unary • STRUCTOP ID
   67      | unary • '(' args ')'
   68      | unary • '(' ')'

    '['       shift, and go to state 90
    '.'       shift, and go to state 91
    '('       shift, and go to state 92
    INCOP     shift, and go to state 93
    DECOP     shift, and go to state 94
    STRUCTOP  shift, and go to state 95

    $default  reduce using rule 48 (binary)


State 110

   41 binary: binary • RELOP binary
   42       | binary • EQUOP binary
   43       | binary • '+' binary
   44       | binary • '-' binary
   44       | binary '-' binary •
   45       | binary • '*' binary
   46       | binary • '/' binary
   47       | binary • '%' binary
   49       | binary • LOGICAL_AND binary
   50       | binary • LOGICAL_OR binary

    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '%'  shift, and go to state 84

    $default  reduce using rule 44 (binary)


State 111

   41 binary: binary • RELOP binary
   42       | binary • EQUOP binary
   43       | binary • '+' binary
   44       | binary • '-' binary
   45       | binary • '*' binary
   45       | binary '*' binary •
   46       | binary • '/' binary
   47       | binary • '%' binary
   49       | binary • LOGICAL_AND binary
   50       | binary • LOGICAL_OR binary

    $default  reduce using rule 45 (binary)


State 112

   41 binary: binary • RELOP binary
   42       | binary • EQUOP binary
   43       | binary • '+' binary
   44       | binary • '-' binary
   45       | binary • '*' binary
   46       | binary • '/' binary
   46       | binary '/' binary •
   47       | binary • '%' binary
   49       | binary • LOGICAL_AND binary
   50       | binary • LOGICAL_OR binary

    $default  reduce using rule 46 (binary)


State 113

   41 binary: binary • RELOP binary
   42       | binary • EQUOP binary
   43       | binary • '+' binary
   44       | binary • '-' binary
   45       | binary • '*' binary
   46       | binary • '/' binary
   47       | binary • '%' binary
   47       | binary '%' binary •
   49       | binary • LOGICAL_AND binary
   50       | binary • LOGICAL_OR binary

    $default  reduce using rule 47 (binary)


State 114

   41 binary: binary • RELOP binary
   42       | binary • EQUOP binary
   43       | binary • '+' binary
   44       | binary • '-' binary
   45       | binary • '*' binary
   46       | binary • '/' binary
   47       | binary • '%' binary
   49       | binary • LOGICAL_AND binary
   50       | binary • LOGICAL_OR binary
   50       | binary LOGICAL_OR binary •

    '+'          shift, and go to state 80
    '-'          shift, and go to state 81
    '*'          shift, and go to state 82
    '/'          shift, and go to state 83
    '%'          shift, and go to state 84
    LOGICAL_AND  shift, and go to state 86
    RELOP        shift, and go to state 87
    EQUOP        shift, and go to state 88

    $default  reduce using rule 50 (binary)


State 115

   41 binary: binary • RELOP binary
   42       | binary • EQUOP binary
   43       | binary • '+' binary
   44       | binary • '-' binary
   45       | binary • '*' binary
   46       | binary • '/' binary
   47       | binary • '%' binary
   49       | binary • LOGICAL_AND binary
   49       | binary LOGICAL_AND binary •
   50       | binary • LOGICAL_OR binary

    '+'    shift, and go to state 80
    '-'    shift, and go to state 81
    '*'    shift, and go to state 82
    '/'    shift, and go to state 83
    '%'    shift, and go to state 84
    RELOP  shift, and go to state 87
    EQUOP  shift, and go to state 88

    $default  reduce using rule 49 (binary)


State 116

   41 binary: binary • RELOP binary
   41       | binary RELOP binary •
   42       | binary • EQUOP binary
   43       | binary • '+' binary
   44       | binary • '-' binary
   45       | binary • '*' binary
   46       | binary • '/' binary
   47       | binary • '%' binary
   49       | binary • LOGICAL_AND binary
   50       | binary • LOGICAL_OR binary

    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '%'  shift, and go to state 84

    $default  reduce using rule 41 (binary)


State 117

   41 binary: binary • RELOP binary
   42       | binary • EQUOP binary
   42       | binary EQUOP binary •
   43       | binary • '+' binary
   44       | binary • '-' binary
   45       | binary • '*' binary
   46       | binary • '/' binary
   47       | binary • '%' binary
   49       | binary • LOGICAL_AND binary
   50       | binary • LOGICAL_OR binary

    '+'    shift, and go to state 80
    '-'    shift, and go to state 81
    '*'    shift, and go to state 82
    '/'    shift, and go to state 83
    '%'    shift, and go to state 84
    RELOP  shift, and go to state 87

    $default  reduce using rule 42 (binary)


State 118

   39 expr: unary '=' expr •

    $default  reduce using rule 39 (expr)


State 119

   64 unary: unary '[' expr • ']'

    ']'  shift, and go to state 131


State 120

   65 unary: unary '.' ID •

    $default  reduce using rule 65 (unary)


State 121

   68 unary: unary '(' ')' •

    $default  reduce using rule 68 (unary)


State 122

   70 args: expr •

    $default  reduce using rule 70 (args)


State 123

   67 unary: unary '(' args • ')'
   71 args: args • ',' expr

    ','  shift, and go to state 132
    ')'  shift, and go to state 133


State 124

   66 unary: unary STRUCTOP ID •

    $default  reduce using rule 66 (unary)


State 125

   19 param_decl: type_specifier pointers ID '[' • INTEGER_CONST ']'

    INTEGER_CONST  shift, and go to state 134


State 126

   10 struct_specifier: STRUCT ID '{' def_list '}' •

    $default  reduce using rule 10 (struct_specifier)


State 127

   23 def: type_specifier pointers ID '[' INTEGER_CONST • ']' ';'

    ']'  shift, and go to state 135


State 128

   31 stmt: IF '(' expr ')' • stmt
   32     | IF '(' expr ')' • stmt ELSE stmt

    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '('            shift, and go to state 36
    '!'            shift, and go to state 37
    '&'            shift, and go to state 38
    SYM_NULL       shift, and go to state 39
    RETURN         shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    STRING         shift, and go to state 43
    IF             shift, and go to state 44
    WHILE          shift, and go to state 45
    FOR            shift, and go to state 46
    BREAK          shift, and go to state 47
    CONTINUE       shift, and go to state 48
    INCOP          shift, and go to state 49
    DECOP          shift, and go to state 50
    ID             shift, and go to state 51
    ';'            shift, and go to state 52
    '{'            shift, and go to state 13

    compound_stmt  go to state 54
    stmt           go to state 136
    expr           go to state 56
    binary         go to state 57
    unary          go to state 58


State 129

   33 stmt: WHILE '(' expr ')' • stmt

    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '('            shift, and go to state 36
    '!'            shift, and go to state 37
    '&'            shift, and go to state 38
    SYM_NULL       shift, and go to state 39
    RETURN         shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    STRING         shift, and go to state 43
    IF             shift, and go to state 44
    WHILE          shift, and go to state 45
    FOR            shift, and go to state 46
    BREAK          shift, and go to state 47
    CONTINUE       shift, and go to state 48
    INCOP          shift, and go to state 49
    DECOP          shift, and go to state 50
    ID             shift, and go to state 51
    ';'            shift, and go to state 52
    '{'            shift, and go to state 13

    compound_stmt  go to state 54
    stmt           go to state 137
    expr           go to state 56
    binary         go to state 57
    unary          go to state 58


State 130

   34 stmt: FOR '(' expr_e ';' • expr_e ';' expr_e ')' stmt

    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '('            shift, and go to state 36
    '!'            shift, and go to state 37
    '&'            shift, and go to state 38
    SYM_NULL       shift, and go to state 39
    INTEGER_CONST  shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    STRING         shift, and go to state 43
    INCOP          shift, and go to state 49
    DECOP          shift, and go to state 50
    ID             shift, and go to state 51

    $default  reduce using rule 38 (expr_e)

    expr_e  go to state 138
    expr    go to state 107
    binary  go to state 57
    unary   go to state 58


State 131

   64 unary: unary '[' expr ']' •

    $default  reduce using rule 64 (unary)


State 132

   71 args: args ',' • expr

    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '('            shift, and go to state 36
    '!'            shift, and go to state 37
    '&'            shift, and go to state 38
    SYM_NULL       shift, and go to state 39
    INTEGER_CONST  shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    STRING         shift, and go to state 43
    INCOP          shift, and go to state 49
    DECOP          shift, and go to state 50
    ID             shift, and go to state 51

    expr    go to state 139
    binary  go to state 57
    unary   go to state 58


State 133

   67 unary: unary '(' args ')' •

    $default  reduce using rule 67 (unary)


State 134

   19 param_decl: type_specifier pointers ID '[' INTEGER_CONST • ']'

    ']'  shift, and go to state 140


State 135

   23 def: type_specifier pointers ID '[' INTEGER_CONST ']' • ';'

    ';'  shift, and go to state 141


State 136

   31 stmt: IF '(' expr ')' stmt •
   32     | IF '(' expr ')' stmt • ELSE stmt

    ELSE  shift, and go to state 142

    $default  reduce using rule 31 (stmt)


State 137

   33 stmt: WHILE '(' expr ')' stmt •

    $default  reduce using rule 33 (stmt)


State 138

   34 stmt: FOR '(' expr_e ';' expr_e • ';' expr_e ')' stmt

    ';'  shift, and go to state 143


State 139

   71 args: args ',' expr •

    $default  reduce using rule 71 (args)


State 140

   19 param_decl: type_specifier pointers ID '[' INTEGER_CONST ']' •

    $default  reduce using rule 19 (param_decl)


State 141

   23 def: type_specifier pointers ID '[' INTEGER_CONST ']' ';' •

    $default  reduce using rule 23 (def)


State 142

   32 stmt: IF '(' expr ')' stmt ELSE • stmt

    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '('            shift, and go to state 36
    '!'            shift, and go to state 37
    '&'            shift, and go to state 38
    SYM_NULL       shift, and go to state 39
    RETURN         shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    STRING         shift, and go to state 43
    IF             shift, and go to state 44
    WHILE          shift, and go to state 45
    FOR            shift, and go to state 46
    BREAK          shift, and go to state 47
    CONTINUE       shift, and go to state 48
    INCOP          shift, and go to state 49
    DECOP          shift, and go to state 50
    ID             shift, and go to state 51
    ';'            shift, and go to state 52
    '{'            shift, and go to state 13

    compound_stmt  go to state 54
    stmt           go to state 144
    expr           go to state 56
    binary         go to state 57
    unary          go to state 58


State 143

   34 stmt: FOR '(' expr_e ';' expr_e ';' • expr_e ')' stmt

    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '('            shift, and go to state 36
    '!'            shift, and go to state 37
    '&'            shift, and go to state 38
    SYM_NULL       shift, and go to state 39
    INTEGER_CONST  shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    STRING         shift, and go to state 43
    INCOP          shift, and go to state 49
    DECOP          shift, and go to state 50
    ID             shift, and go to state 51

    $default  reduce using rule 38 (expr_e)

    expr_e  go to state 145
    expr    go to state 107
    binary  go to state 57
    unary   go to state 58


State 144

   32 stmt: IF '(' expr ')' stmt ELSE stmt •

    $default  reduce using rule 32 (stmt)


State 145

   34 stmt: FOR '(' expr_e ';' expr_e ';' expr_e • ')' stmt

    ')'  shift, and go to state 146


State 146

   34 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' • stmt

    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '('            shift, and go to state 36
    '!'            shift, and go to state 37
    '&'            shift, and go to state 38
    SYM_NULL       shift, and go to state 39
    RETURN         shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    STRING         shift, and go to state 43
    IF             shift, and go to state 44
    WHILE          shift, and go to state 45
    FOR            shift, and go to state 46
    BREAK          shift, and go to state 47
    CONTINUE       shift, and go to state 48
    INCOP          shift, and go to state 49
    DECOP          shift, and go to state 50
    ID             shift, and go to state 51
    ';'            shift, and go to state 52
    '{'            shift, and go to state 13

    compound_stmt  go to state 54
    stmt           go to state 147
    expr           go to state 56
    binary         go to state 57
    unary          go to state 58


State 147

   34 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt •

    $default  reduce using rule 34 (stmt)
